/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The lineage parents relation with GUID of the parent entity and to child entity.
 */
@ApiModel(description = "The lineage parents relation with GUID of the parent entity and to child entity.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonParentRelation {
  public static final String SERIALIZED_NAME_CHILD_ENTITY_ID = "childEntityId";
  @SerializedName(SERIALIZED_NAME_CHILD_ENTITY_ID)
  private String childEntityId;

  public static final String SERIALIZED_NAME_RELATIONSHIP_ID = "relationshipId";
  @SerializedName(SERIALIZED_NAME_RELATIONSHIP_ID)
  private String relationshipId;

  public static final String SERIALIZED_NAME_PARENT_ENTITY_ID = "parentEntityId";
  @SerializedName(SERIALIZED_NAME_PARENT_ENTITY_ID)
  private String parentEntityId;


  public JsonParentRelation childEntityId(String childEntityId) {
    
    this.childEntityId = childEntityId;
    return this;
  }

   /**
   * The GUID of child entity.
   * @return childEntityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of child entity.")

  public String getChildEntityId() {
    return childEntityId;
  }


  public void setChildEntityId(String childEntityId) {
    this.childEntityId = childEntityId;
  }


  public JsonParentRelation relationshipId(String relationshipId) {
    
    this.relationshipId = relationshipId;
    return this;
  }

   /**
   * The GUID of relationship.
   * @return relationshipId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of relationship.")

  public String getRelationshipId() {
    return relationshipId;
  }


  public void setRelationshipId(String relationshipId) {
    this.relationshipId = relationshipId;
  }


  public JsonParentRelation parentEntityId(String parentEntityId) {
    
    this.parentEntityId = parentEntityId;
    return this;
  }

   /**
   * The GUID of parent entity.
   * @return parentEntityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of parent entity.")

  public String getParentEntityId() {
    return parentEntityId;
  }


  public void setParentEntityId(String parentEntityId) {
    this.parentEntityId = parentEntityId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonParentRelation jsonParentRelation = (JsonParentRelation) o;
    return Objects.equals(this.childEntityId, jsonParentRelation.childEntityId) &&
        Objects.equals(this.relationshipId, jsonParentRelation.relationshipId) &&
        Objects.equals(this.parentEntityId, jsonParentRelation.parentEntityId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(childEntityId, relationshipId, parentEntityId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonParentRelation {\n");
    sb.append("    childEntityId: ").append(toIndentedString(childEntityId)).append("\n");
    sb.append("    relationshipId: ").append(toIndentedString(relationshipId)).append("\n");
    sb.append("    parentEntityId: ").append(toIndentedString(parentEntityId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

