/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * JsonAtlasClassificationDefAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonAtlasClassificationDefAllOf {
  public static final String SERIALIZED_NAME_ENTITY_TYPES = "entityTypes";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPES)
  private List<String> entityTypes = null;

  public static final String SERIALIZED_NAME_SUB_TYPES = "subTypes";
  @SerializedName(SERIALIZED_NAME_SUB_TYPES)
  private List<String> subTypes = null;

  public static final String SERIALIZED_NAME_SUPER_TYPES = "superTypes";
  @SerializedName(SERIALIZED_NAME_SUPER_TYPES)
  private List<String> superTypes = null;


  public JsonAtlasClassificationDefAllOf entityTypes(List<String> entityTypes) {
    
    this.entityTypes = entityTypes;
    return this;
  }

  public JsonAtlasClassificationDefAllOf addEntityTypesItem(String entityTypesItem) {
    if (this.entityTypes == null) {
      this.entityTypes = new ArrayList<String>();
    }
    this.entityTypes.add(entityTypesItem);
    return this;
  }

   /**
   * Specifying a list of entityType names in the classificationDef, ensures that classifications can only be applied to those entityTypes. &lt;ul&gt; &lt;li&gt;Any subtypes of the entity types inherit the restriction&lt;/li&gt; &lt;li&gt;Any classificationDef subtypes inherit the parents entityTypes restrictions&lt;/li&gt; &lt;li&gt;Any classificationDef subtypes can further restrict the parents entityTypes restrictions by specifying a subset of the entityTypes&lt;/li&gt; &lt;li&gt;An empty entityTypes list when there are no parent restrictions means there are no restrictions&lt;/li&gt; &lt;li&gt;An empty entityTypes list when there are parent restrictions means that the subtype picks up the parents restrictions&lt;/li&gt; &lt;li&gt;If a list of entityTypes are supplied, where one inherits from another, this will be rejected. This should encourage cleaner classificationsDefs&lt;/li&gt; &lt;/ul&gt;
   * @return entityTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifying a list of entityType names in the classificationDef, ensures that classifications can only be applied to those entityTypes. <ul> <li>Any subtypes of the entity types inherit the restriction</li> <li>Any classificationDef subtypes inherit the parents entityTypes restrictions</li> <li>Any classificationDef subtypes can further restrict the parents entityTypes restrictions by specifying a subset of the entityTypes</li> <li>An empty entityTypes list when there are no parent restrictions means there are no restrictions</li> <li>An empty entityTypes list when there are parent restrictions means that the subtype picks up the parents restrictions</li> <li>If a list of entityTypes are supplied, where one inherits from another, this will be rejected. This should encourage cleaner classificationsDefs</li> </ul>")

  public List<String> getEntityTypes() {
    return entityTypes;
  }


  public void setEntityTypes(List<String> entityTypes) {
    this.entityTypes = entityTypes;
  }


  public JsonAtlasClassificationDefAllOf subTypes(List<String> subTypes) {
    
    this.subTypes = subTypes;
    return this;
  }

  public JsonAtlasClassificationDefAllOf addSubTypesItem(String subTypesItem) {
    if (this.subTypes == null) {
      this.subTypes = new ArrayList<String>();
    }
    this.subTypes.add(subTypesItem);
    return this;
  }

   /**
   * An array of sub types.
   * @return subTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of sub types.")

  public List<String> getSubTypes() {
    return subTypes;
  }


  public void setSubTypes(List<String> subTypes) {
    this.subTypes = subTypes;
  }


  public JsonAtlasClassificationDefAllOf superTypes(List<String> superTypes) {
    
    this.superTypes = superTypes;
    return this;
  }

  public JsonAtlasClassificationDefAllOf addSuperTypesItem(String superTypesItem) {
    if (this.superTypes == null) {
      this.superTypes = new ArrayList<String>();
    }
    this.superTypes.add(superTypesItem);
    return this;
  }

   /**
   * An array of super types.
   * @return superTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of super types.")

  public List<String> getSuperTypes() {
    return superTypes;
  }


  public void setSuperTypes(List<String> superTypes) {
    this.superTypes = superTypes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasClassificationDefAllOf jsonAtlasClassificationDefAllOf = (JsonAtlasClassificationDefAllOf) o;
    return Objects.equals(this.entityTypes, jsonAtlasClassificationDefAllOf.entityTypes) &&
        Objects.equals(this.subTypes, jsonAtlasClassificationDefAllOf.subTypes) &&
        Objects.equals(this.superTypes, jsonAtlasClassificationDefAllOf.superTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityTypes, subTypes, superTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasClassificationDefAllOf {\n");
    sb.append("    entityTypes: ").append(toIndentedString(entityTypes)).append("\n");
    sb.append("    subTypes: ").append(toIndentedString(subTypes)).append("\n");
    sb.append("    superTypes: ").append(toIndentedString(superTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

