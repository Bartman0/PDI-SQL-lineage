/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.XmlNs0PListAllOf;
import org.openapitools.client.model.XmlNs0SortType;

/**
 * Paginated-list, for returning search results.
 */
@ApiModel(description = "Paginated-list, for returning search results.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class XmlNs0PList {
  public static final String SERIALIZED_NAME_LIST = "list";
  @SerializedName(SERIALIZED_NAME_LIST)
  private List<Object> list = null;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_SORT_BY = "sortBy";
  @SerializedName(SERIALIZED_NAME_SORT_BY)
  private String sortBy;

  public static final String SERIALIZED_NAME_SORT_TYPE = "sortType";
  @SerializedName(SERIALIZED_NAME_SORT_TYPE)
  private XmlNs0SortType sortType;

  public static final String SERIALIZED_NAME_START_INDEX = "startIndex";
  @SerializedName(SERIALIZED_NAME_START_INDEX)
  private Long startIndex;

  public static final String SERIALIZED_NAME_TOTAL_COUNT = "totalCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_COUNT)
  private Long totalCount;


  public XmlNs0PList list(List<Object> list) {
    
    this.list = list;
    return this;
  }

  public XmlNs0PList addListItem(Object listItem) {
    if (this.list == null) {
      this.list = new ArrayList<Object>();
    }
    this.list.add(listItem);
    return this;
  }

   /**
   * An array of objects.
   * @return list
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of objects.")

  public List<Object> getList() {
    return list;
  }


  public void setList(List<Object> list) {
    this.list = list;
  }


  public XmlNs0PList pageSize(Integer pageSize) {
    
    this.pageSize = pageSize;
    return this;
  }

   /**
   * The size of the page.
   * @return pageSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The size of the page.")

  public Integer getPageSize() {
    return pageSize;
  }


  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public XmlNs0PList sortBy(String sortBy) {
    
    this.sortBy = sortBy;
    return this;
  }

   /**
   * The sorted by field.
   * @return sortBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The sorted by field.")

  public String getSortBy() {
    return sortBy;
  }


  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }


  public XmlNs0PList sortType(XmlNs0SortType sortType) {
    
    this.sortType = sortType;
    return this;
  }

   /**
   * Get sortType
   * @return sortType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public XmlNs0SortType getSortType() {
    return sortType;
  }


  public void setSortType(XmlNs0SortType sortType) {
    this.sortType = sortType;
  }


  public XmlNs0PList startIndex(Long startIndex) {
    
    this.startIndex = startIndex;
    return this;
  }

   /**
   * The start index of the page.
   * @return startIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The start index of the page.")

  public Long getStartIndex() {
    return startIndex;
  }


  public void setStartIndex(Long startIndex) {
    this.startIndex = startIndex;
  }


  public XmlNs0PList totalCount(Long totalCount) {
    
    this.totalCount = totalCount;
    return this;
  }

   /**
   * The total count of items.
   * @return totalCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total count of items.")

  public Long getTotalCount() {
    return totalCount;
  }


  public void setTotalCount(Long totalCount) {
    this.totalCount = totalCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    XmlNs0PList xmlNs0PList = (XmlNs0PList) o;
    return Objects.equals(this.list, xmlNs0PList.list) &&
        Objects.equals(this.pageSize, xmlNs0PList.pageSize) &&
        Objects.equals(this.sortBy, xmlNs0PList.sortBy) &&
        Objects.equals(this.sortType, xmlNs0PList.sortType) &&
        Objects.equals(this.startIndex, xmlNs0PList.startIndex) &&
        Objects.equals(this.totalCount, xmlNs0PList.totalCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(list, pageSize, sortBy, sortType, startIndex, totalCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class XmlNs0PList {\n");
    sb.append("    list: ").append(toIndentedString(list)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortType: ").append(toIndentedString(sortType)).append("\n");
    sb.append("    startIndex: ").append(toIndentedString(startIndex)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

