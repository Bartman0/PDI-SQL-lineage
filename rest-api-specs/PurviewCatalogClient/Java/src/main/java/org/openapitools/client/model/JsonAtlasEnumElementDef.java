/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * class that captures details of an enum-element.
 */
@ApiModel(description = "class that captures details of an enum-element.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonAtlasEnumElementDef {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ORDINAL = "ordinal";
  @SerializedName(SERIALIZED_NAME_ORDINAL)
  private BigDecimal ordinal;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;


  public JsonAtlasEnumElementDef description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the enum element definition.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the enum element definition.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public JsonAtlasEnumElementDef ordinal(BigDecimal ordinal) {
    
    this.ordinal = ordinal;
    return this;
  }

   /**
   * The ordinal of the enum element definition.
   * @return ordinal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ordinal of the enum element definition.")

  public BigDecimal getOrdinal() {
    return ordinal;
  }


  public void setOrdinal(BigDecimal ordinal) {
    this.ordinal = ordinal;
  }


  public JsonAtlasEnumElementDef value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * The value of the enum element definition.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value of the enum element definition.")

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasEnumElementDef jsonAtlasEnumElementDef = (JsonAtlasEnumElementDef) o;
    return Objects.equals(this.description, jsonAtlasEnumElementDef.description) &&
        Objects.equals(this.ordinal, jsonAtlasEnumElementDef.ordinal) &&
        Objects.equals(this.value, jsonAtlasEnumElementDef.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, ordinal, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasEnumElementDef {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ordinal: ").append(toIndentedString(ordinal)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

