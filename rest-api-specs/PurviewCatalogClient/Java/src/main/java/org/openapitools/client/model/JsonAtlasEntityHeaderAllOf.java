/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.JsonAtlasClassification;
import org.openapitools.client.model.JsonAtlasTermAssignmentHeader;
import org.openapitools.client.model.JsonStatus;

/**
 * JsonAtlasEntityHeaderAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonAtlasEntityHeaderAllOf {
  public static final String SERIALIZED_NAME_CLASSIFICATION_NAMES = "classificationNames";
  @SerializedName(SERIALIZED_NAME_CLASSIFICATION_NAMES)
  private List<String> classificationNames = null;

  public static final String SERIALIZED_NAME_CLASSIFICATIONS = "classifications";
  @SerializedName(SERIALIZED_NAME_CLASSIFICATIONS)
  private List<JsonAtlasClassification> classifications = null;

  public static final String SERIALIZED_NAME_DISPLAY_TEXT = "displayText";
  @SerializedName(SERIALIZED_NAME_DISPLAY_TEXT)
  private String displayText;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_MEANING_NAMES = "meaningNames";
  @SerializedName(SERIALIZED_NAME_MEANING_NAMES)
  private List<String> meaningNames = null;

  public static final String SERIALIZED_NAME_MEANINGS = "meanings";
  @SerializedName(SERIALIZED_NAME_MEANINGS)
  private List<JsonAtlasTermAssignmentHeader> meanings = null;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private JsonStatus status;


  public JsonAtlasEntityHeaderAllOf classificationNames(List<String> classificationNames) {
    
    this.classificationNames = classificationNames;
    return this;
  }

  public JsonAtlasEntityHeaderAllOf addClassificationNamesItem(String classificationNamesItem) {
    if (this.classificationNames == null) {
      this.classificationNames = new ArrayList<String>();
    }
    this.classificationNames.add(classificationNamesItem);
    return this;
  }

   /**
   * An array of classification names.
   * @return classificationNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of classification names.")

  public List<String> getClassificationNames() {
    return classificationNames;
  }


  public void setClassificationNames(List<String> classificationNames) {
    this.classificationNames = classificationNames;
  }


  public JsonAtlasEntityHeaderAllOf classifications(List<JsonAtlasClassification> classifications) {
    
    this.classifications = classifications;
    return this;
  }

  public JsonAtlasEntityHeaderAllOf addClassificationsItem(JsonAtlasClassification classificationsItem) {
    if (this.classifications == null) {
      this.classifications = new ArrayList<JsonAtlasClassification>();
    }
    this.classifications.add(classificationsItem);
    return this;
  }

   /**
   * An array of classifications.
   * @return classifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of classifications.")

  public List<JsonAtlasClassification> getClassifications() {
    return classifications;
  }


  public void setClassifications(List<JsonAtlasClassification> classifications) {
    this.classifications = classifications;
  }


  public JsonAtlasEntityHeaderAllOf displayText(String displayText) {
    
    this.displayText = displayText;
    return this;
  }

   /**
   * The display text.
   * @return displayText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The display text.")

  public String getDisplayText() {
    return displayText;
  }


  public void setDisplayText(String displayText) {
    this.displayText = displayText;
  }


  public JsonAtlasEntityHeaderAllOf guid(String guid) {
    
    this.guid = guid;
    return this;
  }

   /**
   * The GUID of the record.
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of the record.")

  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    this.guid = guid;
  }


  public JsonAtlasEntityHeaderAllOf meaningNames(List<String> meaningNames) {
    
    this.meaningNames = meaningNames;
    return this;
  }

  public JsonAtlasEntityHeaderAllOf addMeaningNamesItem(String meaningNamesItem) {
    if (this.meaningNames == null) {
      this.meaningNames = new ArrayList<String>();
    }
    this.meaningNames.add(meaningNamesItem);
    return this;
  }

   /**
   * An array of meanings.
   * @return meaningNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of meanings.")

  public List<String> getMeaningNames() {
    return meaningNames;
  }


  public void setMeaningNames(List<String> meaningNames) {
    this.meaningNames = meaningNames;
  }


  public JsonAtlasEntityHeaderAllOf meanings(List<JsonAtlasTermAssignmentHeader> meanings) {
    
    this.meanings = meanings;
    return this;
  }

  public JsonAtlasEntityHeaderAllOf addMeaningsItem(JsonAtlasTermAssignmentHeader meaningsItem) {
    if (this.meanings == null) {
      this.meanings = new ArrayList<JsonAtlasTermAssignmentHeader>();
    }
    this.meanings.add(meaningsItem);
    return this;
  }

   /**
   * An array of term assignment headers.
   * @return meanings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of term assignment headers.")

  public List<JsonAtlasTermAssignmentHeader> getMeanings() {
    return meanings;
  }


  public void setMeanings(List<JsonAtlasTermAssignmentHeader> meanings) {
    this.meanings = meanings;
  }


  public JsonAtlasEntityHeaderAllOf status(JsonStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonStatus getStatus() {
    return status;
  }


  public void setStatus(JsonStatus status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasEntityHeaderAllOf jsonAtlasEntityHeaderAllOf = (JsonAtlasEntityHeaderAllOf) o;
    return Objects.equals(this.classificationNames, jsonAtlasEntityHeaderAllOf.classificationNames) &&
        Objects.equals(this.classifications, jsonAtlasEntityHeaderAllOf.classifications) &&
        Objects.equals(this.displayText, jsonAtlasEntityHeaderAllOf.displayText) &&
        Objects.equals(this.guid, jsonAtlasEntityHeaderAllOf.guid) &&
        Objects.equals(this.meaningNames, jsonAtlasEntityHeaderAllOf.meaningNames) &&
        Objects.equals(this.meanings, jsonAtlasEntityHeaderAllOf.meanings) &&
        Objects.equals(this.status, jsonAtlasEntityHeaderAllOf.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(classificationNames, classifications, displayText, guid, meaningNames, meanings, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasEntityHeaderAllOf {\n");
    sb.append("    classificationNames: ").append(toIndentedString(classificationNames)).append("\n");
    sb.append("    classifications: ").append(toIndentedString(classifications)).append("\n");
    sb.append("    displayText: ").append(toIndentedString(displayText)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    meaningNames: ").append(toIndentedString(meaningNames)).append("\n");
    sb.append("    meanings: ").append(toIndentedString(meanings)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

