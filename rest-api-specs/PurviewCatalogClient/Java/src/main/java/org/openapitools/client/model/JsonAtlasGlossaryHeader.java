/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The glossary header with basic information.
 */
@ApiModel(description = "The glossary header with basic information.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonAtlasGlossaryHeader {
  public static final String SERIALIZED_NAME_DISPLAY_TEXT = "displayText";
  @SerializedName(SERIALIZED_NAME_DISPLAY_TEXT)
  private String displayText;

  public static final String SERIALIZED_NAME_GLOSSARY_GUID = "glossaryGuid";
  @SerializedName(SERIALIZED_NAME_GLOSSARY_GUID)
  private String glossaryGuid;

  public static final String SERIALIZED_NAME_RELATION_GUID = "relationGuid";
  @SerializedName(SERIALIZED_NAME_RELATION_GUID)
  private String relationGuid;


  public JsonAtlasGlossaryHeader displayText(String displayText) {
    
    this.displayText = displayText;
    return this;
  }

   /**
   * The display text.
   * @return displayText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The display text.")

  public String getDisplayText() {
    return displayText;
  }


  public void setDisplayText(String displayText) {
    this.displayText = displayText;
  }


  public JsonAtlasGlossaryHeader glossaryGuid(String glossaryGuid) {
    
    this.glossaryGuid = glossaryGuid;
    return this;
  }

   /**
   * The GUID of the glossary.
   * @return glossaryGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of the glossary.")

  public String getGlossaryGuid() {
    return glossaryGuid;
  }


  public void setGlossaryGuid(String glossaryGuid) {
    this.glossaryGuid = glossaryGuid;
  }


  public JsonAtlasGlossaryHeader relationGuid(String relationGuid) {
    
    this.relationGuid = relationGuid;
    return this;
  }

   /**
   * The GUID of the relationship.
   * @return relationGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of the relationship.")

  public String getRelationGuid() {
    return relationGuid;
  }


  public void setRelationGuid(String relationGuid) {
    this.relationGuid = relationGuid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasGlossaryHeader jsonAtlasGlossaryHeader = (JsonAtlasGlossaryHeader) o;
    return Objects.equals(this.displayText, jsonAtlasGlossaryHeader.displayText) &&
        Objects.equals(this.glossaryGuid, jsonAtlasGlossaryHeader.glossaryGuid) &&
        Objects.equals(this.relationGuid, jsonAtlasGlossaryHeader.relationGuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayText, glossaryGuid, relationGuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasGlossaryHeader {\n");
    sb.append("    displayText: ").append(toIndentedString(displayText)).append("\n");
    sb.append("    glossaryGuid: ").append(toIndentedString(glossaryGuid)).append("\n");
    sb.append("    relationGuid: ").append(toIndentedString(relationGuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

