/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Reference to an object-instance of an Atlas type - like entity.
 */
@ApiModel(description = "Reference to an object-instance of an Atlas type - like entity.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonAtlasObjectId {
  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_TYPE_NAME = "typeName";
  @SerializedName(SERIALIZED_NAME_TYPE_NAME)
  private String typeName;

  public static final String SERIALIZED_NAME_UNIQUE_ATTRIBUTES = "uniqueAttributes";
  @SerializedName(SERIALIZED_NAME_UNIQUE_ATTRIBUTES)
  private Map<String, Object> uniqueAttributes = null;


  public JsonAtlasObjectId guid(String guid) {
    
    this.guid = guid;
    return this;
  }

   /**
   * The GUID of the object.
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of the object.")

  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    this.guid = guid;
  }


  public JsonAtlasObjectId typeName(String typeName) {
    
    this.typeName = typeName;
    return this;
  }

   /**
   * The name of the type.
   * @return typeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the type.")

  public String getTypeName() {
    return typeName;
  }


  public void setTypeName(String typeName) {
    this.typeName = typeName;
  }


  public JsonAtlasObjectId uniqueAttributes(Map<String, Object> uniqueAttributes) {
    
    this.uniqueAttributes = uniqueAttributes;
    return this;
  }

  public JsonAtlasObjectId putUniqueAttributesItem(String key, Object uniqueAttributesItem) {
    if (this.uniqueAttributes == null) {
      this.uniqueAttributes = new HashMap<String, Object>();
    }
    this.uniqueAttributes.put(key, uniqueAttributesItem);
    return this;
  }

   /**
   * The unique attributes of the object.
   * @return uniqueAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique attributes of the object.")

  public Map<String, Object> getUniqueAttributes() {
    return uniqueAttributes;
  }


  public void setUniqueAttributes(Map<String, Object> uniqueAttributes) {
    this.uniqueAttributes = uniqueAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasObjectId jsonAtlasObjectId = (JsonAtlasObjectId) o;
    return Objects.equals(this.guid, jsonAtlasObjectId.guid) &&
        Objects.equals(this.typeName, jsonAtlasObjectId.typeName) &&
        Objects.equals(this.uniqueAttributes, jsonAtlasObjectId.uniqueAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(guid, typeName, uniqueAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasObjectId {\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    typeName: ").append(toIndentedString(typeName)).append("\n");
    sb.append("    uniqueAttributes: ").append(toIndentedString(uniqueAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

