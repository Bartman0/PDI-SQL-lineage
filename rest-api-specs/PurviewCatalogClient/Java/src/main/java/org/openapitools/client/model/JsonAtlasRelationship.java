/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.JsonAtlasClassification;
import org.openapitools.client.model.JsonAtlasObjectId;
import org.openapitools.client.model.JsonAtlasRelationshipAllOf;
import org.openapitools.client.model.JsonAtlasStruct;
import org.openapitools.client.model.JsonPropagateTags;
import org.openapitools.client.model.JsonStatusAtlasRelationship;

/**
 * Atlas relationship instance.
 */
@ApiModel(description = "Atlas relationship instance.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonAtlasRelationship {
  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, Object> attributes = null;

  public static final String SERIALIZED_NAME_TYPE_NAME = "typeName";
  @SerializedName(SERIALIZED_NAME_TYPE_NAME)
  private String typeName;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_T_S = "lastModifiedTS";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_T_S)
  private String lastModifiedTS;

  public static final String SERIALIZED_NAME_BLOCKED_PROPAGATED_CLASSIFICATIONS = "blockedPropagatedClassifications";
  @SerializedName(SERIALIZED_NAME_BLOCKED_PROPAGATED_CLASSIFICATIONS)
  private List<JsonAtlasClassification> blockedPropagatedClassifications = null;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private BigDecimal createTime;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_END1 = "end1";
  @SerializedName(SERIALIZED_NAME_END1)
  private JsonAtlasObjectId end1;

  public static final String SERIALIZED_NAME_END2 = "end2";
  @SerializedName(SERIALIZED_NAME_END2)
  private JsonAtlasObjectId end2;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_HOME_ID = "homeId";
  @SerializedName(SERIALIZED_NAME_HOME_ID)
  private String homeId;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_PROPAGATE_TAGS = "propagateTags";
  @SerializedName(SERIALIZED_NAME_PROPAGATE_TAGS)
  private JsonPropagateTags propagateTags;

  public static final String SERIALIZED_NAME_PROPAGATED_CLASSIFICATIONS = "propagatedClassifications";
  @SerializedName(SERIALIZED_NAME_PROPAGATED_CLASSIFICATIONS)
  private List<JsonAtlasClassification> propagatedClassifications = null;

  public static final String SERIALIZED_NAME_PROVENANCE_TYPE = "provenanceType";
  @SerializedName(SERIALIZED_NAME_PROVENANCE_TYPE)
  private BigDecimal provenanceType;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private JsonStatusAtlasRelationship status;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private BigDecimal updateTime;

  public static final String SERIALIZED_NAME_UPDATED_BY = "updatedBy";
  @SerializedName(SERIALIZED_NAME_UPDATED_BY)
  private String updatedBy;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private BigDecimal version;


  public JsonAtlasRelationship attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public JsonAtlasRelationship putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<String, Object>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * The attributes of the struct.
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The attributes of the struct.")

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public JsonAtlasRelationship typeName(String typeName) {
    
    this.typeName = typeName;
    return this;
  }

   /**
   * The name of the type.
   * @return typeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the type.")

  public String getTypeName() {
    return typeName;
  }


  public void setTypeName(String typeName) {
    this.typeName = typeName;
  }


  public JsonAtlasRelationship lastModifiedTS(String lastModifiedTS) {
    
    this.lastModifiedTS = lastModifiedTS;
    return this;
  }

   /**
   * ETag for concurrency control.
   * @return lastModifiedTS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ETag for concurrency control.")

  public String getLastModifiedTS() {
    return lastModifiedTS;
  }


  public void setLastModifiedTS(String lastModifiedTS) {
    this.lastModifiedTS = lastModifiedTS;
  }


  public JsonAtlasRelationship blockedPropagatedClassifications(List<JsonAtlasClassification> blockedPropagatedClassifications) {
    
    this.blockedPropagatedClassifications = blockedPropagatedClassifications;
    return this;
  }

  public JsonAtlasRelationship addBlockedPropagatedClassificationsItem(JsonAtlasClassification blockedPropagatedClassificationsItem) {
    if (this.blockedPropagatedClassifications == null) {
      this.blockedPropagatedClassifications = new ArrayList<JsonAtlasClassification>();
    }
    this.blockedPropagatedClassifications.add(blockedPropagatedClassificationsItem);
    return this;
  }

   /**
   * An array of blocked propagated classifications.
   * @return blockedPropagatedClassifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of blocked propagated classifications.")

  public List<JsonAtlasClassification> getBlockedPropagatedClassifications() {
    return blockedPropagatedClassifications;
  }


  public void setBlockedPropagatedClassifications(List<JsonAtlasClassification> blockedPropagatedClassifications) {
    this.blockedPropagatedClassifications = blockedPropagatedClassifications;
  }


  public JsonAtlasRelationship createTime(BigDecimal createTime) {
    
    this.createTime = createTime;
    return this;
  }

   /**
   * The created time of the record.
   * @return createTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The created time of the record.")

  public BigDecimal getCreateTime() {
    return createTime;
  }


  public void setCreateTime(BigDecimal createTime) {
    this.createTime = createTime;
  }


  public JsonAtlasRelationship createdBy(String createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * The user who created the record.
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user who created the record.")

  public String getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public JsonAtlasRelationship end1(JsonAtlasObjectId end1) {
    
    this.end1 = end1;
    return this;
  }

   /**
   * Get end1
   * @return end1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonAtlasObjectId getEnd1() {
    return end1;
  }


  public void setEnd1(JsonAtlasObjectId end1) {
    this.end1 = end1;
  }


  public JsonAtlasRelationship end2(JsonAtlasObjectId end2) {
    
    this.end2 = end2;
    return this;
  }

   /**
   * Get end2
   * @return end2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonAtlasObjectId getEnd2() {
    return end2;
  }


  public void setEnd2(JsonAtlasObjectId end2) {
    this.end2 = end2;
  }


  public JsonAtlasRelationship guid(String guid) {
    
    this.guid = guid;
    return this;
  }

   /**
   * The GUID of the relationship.
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of the relationship.")

  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    this.guid = guid;
  }


  public JsonAtlasRelationship homeId(String homeId) {
    
    this.homeId = homeId;
    return this;
  }

   /**
   * The home ID of the relationship.
   * @return homeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The home ID of the relationship.")

  public String getHomeId() {
    return homeId;
  }


  public void setHomeId(String homeId) {
    this.homeId = homeId;
  }


  public JsonAtlasRelationship label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * The label of the relationship.
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The label of the relationship.")

  public String getLabel() {
    return label;
  }


  public void setLabel(String label) {
    this.label = label;
  }


  public JsonAtlasRelationship propagateTags(JsonPropagateTags propagateTags) {
    
    this.propagateTags = propagateTags;
    return this;
  }

   /**
   * Get propagateTags
   * @return propagateTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonPropagateTags getPropagateTags() {
    return propagateTags;
  }


  public void setPropagateTags(JsonPropagateTags propagateTags) {
    this.propagateTags = propagateTags;
  }


  public JsonAtlasRelationship propagatedClassifications(List<JsonAtlasClassification> propagatedClassifications) {
    
    this.propagatedClassifications = propagatedClassifications;
    return this;
  }

  public JsonAtlasRelationship addPropagatedClassificationsItem(JsonAtlasClassification propagatedClassificationsItem) {
    if (this.propagatedClassifications == null) {
      this.propagatedClassifications = new ArrayList<JsonAtlasClassification>();
    }
    this.propagatedClassifications.add(propagatedClassificationsItem);
    return this;
  }

   /**
   * An array of propagated classifications.
   * @return propagatedClassifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of propagated classifications.")

  public List<JsonAtlasClassification> getPropagatedClassifications() {
    return propagatedClassifications;
  }


  public void setPropagatedClassifications(List<JsonAtlasClassification> propagatedClassifications) {
    this.propagatedClassifications = propagatedClassifications;
  }


  public JsonAtlasRelationship provenanceType(BigDecimal provenanceType) {
    
    this.provenanceType = provenanceType;
    return this;
  }

   /**
   * Used to record the provenance of an instance of an entity or relationship
   * @return provenanceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Used to record the provenance of an instance of an entity or relationship")

  public BigDecimal getProvenanceType() {
    return provenanceType;
  }


  public void setProvenanceType(BigDecimal provenanceType) {
    this.provenanceType = provenanceType;
  }


  public JsonAtlasRelationship status(JsonStatusAtlasRelationship status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonStatusAtlasRelationship getStatus() {
    return status;
  }


  public void setStatus(JsonStatusAtlasRelationship status) {
    this.status = status;
  }


  public JsonAtlasRelationship updateTime(BigDecimal updateTime) {
    
    this.updateTime = updateTime;
    return this;
  }

   /**
   * The update time of the record.
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The update time of the record.")

  public BigDecimal getUpdateTime() {
    return updateTime;
  }


  public void setUpdateTime(BigDecimal updateTime) {
    this.updateTime = updateTime;
  }


  public JsonAtlasRelationship updatedBy(String updatedBy) {
    
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * The user who updated the record.
   * @return updatedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user who updated the record.")

  public String getUpdatedBy() {
    return updatedBy;
  }


  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }


  public JsonAtlasRelationship version(BigDecimal version) {
    
    this.version = version;
    return this;
  }

   /**
   * The version of the relationship.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version of the relationship.")

  public BigDecimal getVersion() {
    return version;
  }


  public void setVersion(BigDecimal version) {
    this.version = version;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasRelationship jsonAtlasRelationship = (JsonAtlasRelationship) o;
    return Objects.equals(this.attributes, jsonAtlasRelationship.attributes) &&
        Objects.equals(this.typeName, jsonAtlasRelationship.typeName) &&
        Objects.equals(this.lastModifiedTS, jsonAtlasRelationship.lastModifiedTS) &&
        Objects.equals(this.blockedPropagatedClassifications, jsonAtlasRelationship.blockedPropagatedClassifications) &&
        Objects.equals(this.createTime, jsonAtlasRelationship.createTime) &&
        Objects.equals(this.createdBy, jsonAtlasRelationship.createdBy) &&
        Objects.equals(this.end1, jsonAtlasRelationship.end1) &&
        Objects.equals(this.end2, jsonAtlasRelationship.end2) &&
        Objects.equals(this.guid, jsonAtlasRelationship.guid) &&
        Objects.equals(this.homeId, jsonAtlasRelationship.homeId) &&
        Objects.equals(this.label, jsonAtlasRelationship.label) &&
        Objects.equals(this.propagateTags, jsonAtlasRelationship.propagateTags) &&
        Objects.equals(this.propagatedClassifications, jsonAtlasRelationship.propagatedClassifications) &&
        Objects.equals(this.provenanceType, jsonAtlasRelationship.provenanceType) &&
        Objects.equals(this.status, jsonAtlasRelationship.status) &&
        Objects.equals(this.updateTime, jsonAtlasRelationship.updateTime) &&
        Objects.equals(this.updatedBy, jsonAtlasRelationship.updatedBy) &&
        Objects.equals(this.version, jsonAtlasRelationship.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, typeName, lastModifiedTS, blockedPropagatedClassifications, createTime, createdBy, end1, end2, guid, homeId, label, propagateTags, propagatedClassifications, provenanceType, status, updateTime, updatedBy, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasRelationship {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    typeName: ").append(toIndentedString(typeName)).append("\n");
    sb.append("    lastModifiedTS: ").append(toIndentedString(lastModifiedTS)).append("\n");
    sb.append("    blockedPropagatedClassifications: ").append(toIndentedString(blockedPropagatedClassifications)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    end1: ").append(toIndentedString(end1)).append("\n");
    sb.append("    end2: ").append(toIndentedString(end2)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    homeId: ").append(toIndentedString(homeId)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    propagateTags: ").append(toIndentedString(propagateTags)).append("\n");
    sb.append("    propagatedClassifications: ").append(toIndentedString(propagatedClassifications)).append("\n");
    sb.append("    provenanceType: ").append(toIndentedString(provenanceType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

