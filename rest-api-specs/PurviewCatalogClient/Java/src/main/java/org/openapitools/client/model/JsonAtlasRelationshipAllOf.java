/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.JsonAtlasClassification;
import org.openapitools.client.model.JsonAtlasObjectId;
import org.openapitools.client.model.JsonPropagateTags;
import org.openapitools.client.model.JsonStatusAtlasRelationship;

/**
 * JsonAtlasRelationshipAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonAtlasRelationshipAllOf {
  public static final String SERIALIZED_NAME_BLOCKED_PROPAGATED_CLASSIFICATIONS = "blockedPropagatedClassifications";
  @SerializedName(SERIALIZED_NAME_BLOCKED_PROPAGATED_CLASSIFICATIONS)
  private List<JsonAtlasClassification> blockedPropagatedClassifications = null;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private BigDecimal createTime;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_END1 = "end1";
  @SerializedName(SERIALIZED_NAME_END1)
  private JsonAtlasObjectId end1;

  public static final String SERIALIZED_NAME_END2 = "end2";
  @SerializedName(SERIALIZED_NAME_END2)
  private JsonAtlasObjectId end2;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_HOME_ID = "homeId";
  @SerializedName(SERIALIZED_NAME_HOME_ID)
  private String homeId;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_PROPAGATE_TAGS = "propagateTags";
  @SerializedName(SERIALIZED_NAME_PROPAGATE_TAGS)
  private JsonPropagateTags propagateTags;

  public static final String SERIALIZED_NAME_PROPAGATED_CLASSIFICATIONS = "propagatedClassifications";
  @SerializedName(SERIALIZED_NAME_PROPAGATED_CLASSIFICATIONS)
  private List<JsonAtlasClassification> propagatedClassifications = null;

  public static final String SERIALIZED_NAME_PROVENANCE_TYPE = "provenanceType";
  @SerializedName(SERIALIZED_NAME_PROVENANCE_TYPE)
  private BigDecimal provenanceType;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private JsonStatusAtlasRelationship status;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private BigDecimal updateTime;

  public static final String SERIALIZED_NAME_UPDATED_BY = "updatedBy";
  @SerializedName(SERIALIZED_NAME_UPDATED_BY)
  private String updatedBy;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private BigDecimal version;


  public JsonAtlasRelationshipAllOf blockedPropagatedClassifications(List<JsonAtlasClassification> blockedPropagatedClassifications) {
    
    this.blockedPropagatedClassifications = blockedPropagatedClassifications;
    return this;
  }

  public JsonAtlasRelationshipAllOf addBlockedPropagatedClassificationsItem(JsonAtlasClassification blockedPropagatedClassificationsItem) {
    if (this.blockedPropagatedClassifications == null) {
      this.blockedPropagatedClassifications = new ArrayList<JsonAtlasClassification>();
    }
    this.blockedPropagatedClassifications.add(blockedPropagatedClassificationsItem);
    return this;
  }

   /**
   * An array of blocked propagated classifications.
   * @return blockedPropagatedClassifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of blocked propagated classifications.")

  public List<JsonAtlasClassification> getBlockedPropagatedClassifications() {
    return blockedPropagatedClassifications;
  }


  public void setBlockedPropagatedClassifications(List<JsonAtlasClassification> blockedPropagatedClassifications) {
    this.blockedPropagatedClassifications = blockedPropagatedClassifications;
  }


  public JsonAtlasRelationshipAllOf createTime(BigDecimal createTime) {
    
    this.createTime = createTime;
    return this;
  }

   /**
   * The created time of the record.
   * @return createTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The created time of the record.")

  public BigDecimal getCreateTime() {
    return createTime;
  }


  public void setCreateTime(BigDecimal createTime) {
    this.createTime = createTime;
  }


  public JsonAtlasRelationshipAllOf createdBy(String createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * The user who created the record.
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user who created the record.")

  public String getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public JsonAtlasRelationshipAllOf end1(JsonAtlasObjectId end1) {
    
    this.end1 = end1;
    return this;
  }

   /**
   * Get end1
   * @return end1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonAtlasObjectId getEnd1() {
    return end1;
  }


  public void setEnd1(JsonAtlasObjectId end1) {
    this.end1 = end1;
  }


  public JsonAtlasRelationshipAllOf end2(JsonAtlasObjectId end2) {
    
    this.end2 = end2;
    return this;
  }

   /**
   * Get end2
   * @return end2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonAtlasObjectId getEnd2() {
    return end2;
  }


  public void setEnd2(JsonAtlasObjectId end2) {
    this.end2 = end2;
  }


  public JsonAtlasRelationshipAllOf guid(String guid) {
    
    this.guid = guid;
    return this;
  }

   /**
   * The GUID of the relationship.
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of the relationship.")

  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    this.guid = guid;
  }


  public JsonAtlasRelationshipAllOf homeId(String homeId) {
    
    this.homeId = homeId;
    return this;
  }

   /**
   * The home ID of the relationship.
   * @return homeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The home ID of the relationship.")

  public String getHomeId() {
    return homeId;
  }


  public void setHomeId(String homeId) {
    this.homeId = homeId;
  }


  public JsonAtlasRelationshipAllOf label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * The label of the relationship.
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The label of the relationship.")

  public String getLabel() {
    return label;
  }


  public void setLabel(String label) {
    this.label = label;
  }


  public JsonAtlasRelationshipAllOf propagateTags(JsonPropagateTags propagateTags) {
    
    this.propagateTags = propagateTags;
    return this;
  }

   /**
   * Get propagateTags
   * @return propagateTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonPropagateTags getPropagateTags() {
    return propagateTags;
  }


  public void setPropagateTags(JsonPropagateTags propagateTags) {
    this.propagateTags = propagateTags;
  }


  public JsonAtlasRelationshipAllOf propagatedClassifications(List<JsonAtlasClassification> propagatedClassifications) {
    
    this.propagatedClassifications = propagatedClassifications;
    return this;
  }

  public JsonAtlasRelationshipAllOf addPropagatedClassificationsItem(JsonAtlasClassification propagatedClassificationsItem) {
    if (this.propagatedClassifications == null) {
      this.propagatedClassifications = new ArrayList<JsonAtlasClassification>();
    }
    this.propagatedClassifications.add(propagatedClassificationsItem);
    return this;
  }

   /**
   * An array of propagated classifications.
   * @return propagatedClassifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of propagated classifications.")

  public List<JsonAtlasClassification> getPropagatedClassifications() {
    return propagatedClassifications;
  }


  public void setPropagatedClassifications(List<JsonAtlasClassification> propagatedClassifications) {
    this.propagatedClassifications = propagatedClassifications;
  }


  public JsonAtlasRelationshipAllOf provenanceType(BigDecimal provenanceType) {
    
    this.provenanceType = provenanceType;
    return this;
  }

   /**
   * Used to record the provenance of an instance of an entity or relationship
   * @return provenanceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Used to record the provenance of an instance of an entity or relationship")

  public BigDecimal getProvenanceType() {
    return provenanceType;
  }


  public void setProvenanceType(BigDecimal provenanceType) {
    this.provenanceType = provenanceType;
  }


  public JsonAtlasRelationshipAllOf status(JsonStatusAtlasRelationship status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonStatusAtlasRelationship getStatus() {
    return status;
  }


  public void setStatus(JsonStatusAtlasRelationship status) {
    this.status = status;
  }


  public JsonAtlasRelationshipAllOf updateTime(BigDecimal updateTime) {
    
    this.updateTime = updateTime;
    return this;
  }

   /**
   * The update time of the record.
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The update time of the record.")

  public BigDecimal getUpdateTime() {
    return updateTime;
  }


  public void setUpdateTime(BigDecimal updateTime) {
    this.updateTime = updateTime;
  }


  public JsonAtlasRelationshipAllOf updatedBy(String updatedBy) {
    
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * The user who updated the record.
   * @return updatedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user who updated the record.")

  public String getUpdatedBy() {
    return updatedBy;
  }


  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }


  public JsonAtlasRelationshipAllOf version(BigDecimal version) {
    
    this.version = version;
    return this;
  }

   /**
   * The version of the relationship.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version of the relationship.")

  public BigDecimal getVersion() {
    return version;
  }


  public void setVersion(BigDecimal version) {
    this.version = version;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasRelationshipAllOf jsonAtlasRelationshipAllOf = (JsonAtlasRelationshipAllOf) o;
    return Objects.equals(this.blockedPropagatedClassifications, jsonAtlasRelationshipAllOf.blockedPropagatedClassifications) &&
        Objects.equals(this.createTime, jsonAtlasRelationshipAllOf.createTime) &&
        Objects.equals(this.createdBy, jsonAtlasRelationshipAllOf.createdBy) &&
        Objects.equals(this.end1, jsonAtlasRelationshipAllOf.end1) &&
        Objects.equals(this.end2, jsonAtlasRelationshipAllOf.end2) &&
        Objects.equals(this.guid, jsonAtlasRelationshipAllOf.guid) &&
        Objects.equals(this.homeId, jsonAtlasRelationshipAllOf.homeId) &&
        Objects.equals(this.label, jsonAtlasRelationshipAllOf.label) &&
        Objects.equals(this.propagateTags, jsonAtlasRelationshipAllOf.propagateTags) &&
        Objects.equals(this.propagatedClassifications, jsonAtlasRelationshipAllOf.propagatedClassifications) &&
        Objects.equals(this.provenanceType, jsonAtlasRelationshipAllOf.provenanceType) &&
        Objects.equals(this.status, jsonAtlasRelationshipAllOf.status) &&
        Objects.equals(this.updateTime, jsonAtlasRelationshipAllOf.updateTime) &&
        Objects.equals(this.updatedBy, jsonAtlasRelationshipAllOf.updatedBy) &&
        Objects.equals(this.version, jsonAtlasRelationshipAllOf.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockedPropagatedClassifications, createTime, createdBy, end1, end2, guid, homeId, label, propagateTags, propagatedClassifications, provenanceType, status, updateTime, updatedBy, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasRelationshipAllOf {\n");
    sb.append("    blockedPropagatedClassifications: ").append(toIndentedString(blockedPropagatedClassifications)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    end1: ").append(toIndentedString(end1)).append("\n");
    sb.append("    end2: ").append(toIndentedString(end2)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    homeId: ").append(toIndentedString(homeId)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    propagateTags: ").append(toIndentedString(propagateTags)).append("\n");
    sb.append("    propagatedClassifications: ").append(toIndentedString(propagatedClassifications)).append("\n");
    sb.append("    provenanceType: ").append(toIndentedString(provenanceType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

