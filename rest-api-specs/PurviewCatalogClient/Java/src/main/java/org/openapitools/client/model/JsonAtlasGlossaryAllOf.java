/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.JsonAtlasRelatedCategoryHeader;
import org.openapitools.client.model.JsonAtlasRelatedTermHeader;

/**
 * JsonAtlasGlossaryAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonAtlasGlossaryAllOf {
  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<JsonAtlasRelatedCategoryHeader> categories = null;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_TERMS = "terms";
  @SerializedName(SERIALIZED_NAME_TERMS)
  private List<JsonAtlasRelatedTermHeader> terms = null;

  public static final String SERIALIZED_NAME_USAGE = "usage";
  @SerializedName(SERIALIZED_NAME_USAGE)
  private String usage;


  public JsonAtlasGlossaryAllOf categories(List<JsonAtlasRelatedCategoryHeader> categories) {
    
    this.categories = categories;
    return this;
  }

  public JsonAtlasGlossaryAllOf addCategoriesItem(JsonAtlasRelatedCategoryHeader categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<JsonAtlasRelatedCategoryHeader>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * An array of categories.
   * @return categories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of categories.")

  public List<JsonAtlasRelatedCategoryHeader> getCategories() {
    return categories;
  }


  public void setCategories(List<JsonAtlasRelatedCategoryHeader> categories) {
    this.categories = categories;
  }


  public JsonAtlasGlossaryAllOf language(String language) {
    
    this.language = language;
    return this;
  }

   /**
   * The language of the glossary.
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The language of the glossary.")

  public String getLanguage() {
    return language;
  }


  public void setLanguage(String language) {
    this.language = language;
  }


  public JsonAtlasGlossaryAllOf terms(List<JsonAtlasRelatedTermHeader> terms) {
    
    this.terms = terms;
    return this;
  }

  public JsonAtlasGlossaryAllOf addTermsItem(JsonAtlasRelatedTermHeader termsItem) {
    if (this.terms == null) {
      this.terms = new ArrayList<JsonAtlasRelatedTermHeader>();
    }
    this.terms.add(termsItem);
    return this;
  }

   /**
   * An array of related term headers.
   * @return terms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of related term headers.")

  public List<JsonAtlasRelatedTermHeader> getTerms() {
    return terms;
  }


  public void setTerms(List<JsonAtlasRelatedTermHeader> terms) {
    this.terms = terms;
  }


  public JsonAtlasGlossaryAllOf usage(String usage) {
    
    this.usage = usage;
    return this;
  }

   /**
   * The usage of the glossary.
   * @return usage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The usage of the glossary.")

  public String getUsage() {
    return usage;
  }


  public void setUsage(String usage) {
    this.usage = usage;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasGlossaryAllOf jsonAtlasGlossaryAllOf = (JsonAtlasGlossaryAllOf) o;
    return Objects.equals(this.categories, jsonAtlasGlossaryAllOf.categories) &&
        Objects.equals(this.language, jsonAtlasGlossaryAllOf.language) &&
        Objects.equals(this.terms, jsonAtlasGlossaryAllOf.terms) &&
        Objects.equals(this.usage, jsonAtlasGlossaryAllOf.usage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categories, language, terms, usage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasGlossaryAllOf {\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

