/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.JsonNumberFormat;
import org.openapitools.client.model.JsonTimeZone;

/**
 * The date format.
 */
@ApiModel(description = "The date format.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonDateFormat {
  public static final String SERIALIZED_NAME_AVAILABLE_LOCALES = "availableLocales";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_LOCALES)
  private List<String> availableLocales = null;

  public static final String SERIALIZED_NAME_CALENDAR = "calendar";
  @SerializedName(SERIALIZED_NAME_CALENDAR)
  private BigDecimal calendar;

  public static final String SERIALIZED_NAME_DATE_INSTANCE = "dateInstance";
  @SerializedName(SERIALIZED_NAME_DATE_INSTANCE)
  private JsonDateFormat dateInstance;

  public static final String SERIALIZED_NAME_DATE_TIME_INSTANCE = "dateTimeInstance";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_INSTANCE)
  private JsonDateFormat dateTimeInstance;

  public static final String SERIALIZED_NAME_INSTANCE = "instance";
  @SerializedName(SERIALIZED_NAME_INSTANCE)
  private JsonDateFormat instance;

  public static final String SERIALIZED_NAME_LENIENT = "lenient";
  @SerializedName(SERIALIZED_NAME_LENIENT)
  private Boolean lenient;

  public static final String SERIALIZED_NAME_NUMBER_FORMAT = "numberFormat";
  @SerializedName(SERIALIZED_NAME_NUMBER_FORMAT)
  private JsonNumberFormat numberFormat;

  public static final String SERIALIZED_NAME_TIME_INSTANCE = "timeInstance";
  @SerializedName(SERIALIZED_NAME_TIME_INSTANCE)
  private JsonDateFormat timeInstance;

  public static final String SERIALIZED_NAME_TIME_ZONE = "timeZone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private JsonTimeZone timeZone;


  public JsonDateFormat availableLocales(List<String> availableLocales) {
    
    this.availableLocales = availableLocales;
    return this;
  }

  public JsonDateFormat addAvailableLocalesItem(String availableLocalesItem) {
    if (this.availableLocales == null) {
      this.availableLocales = new ArrayList<String>();
    }
    this.availableLocales.add(availableLocalesItem);
    return this;
  }

   /**
   * An array of available locales.
   * @return availableLocales
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of available locales.")

  public List<String> getAvailableLocales() {
    return availableLocales;
  }


  public void setAvailableLocales(List<String> availableLocales) {
    this.availableLocales = availableLocales;
  }


  public JsonDateFormat calendar(BigDecimal calendar) {
    
    this.calendar = calendar;
    return this;
  }

   /**
   * Get calendar
   * @return calendar
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getCalendar() {
    return calendar;
  }


  public void setCalendar(BigDecimal calendar) {
    this.calendar = calendar;
  }


  public JsonDateFormat dateInstance(JsonDateFormat dateInstance) {
    
    this.dateInstance = dateInstance;
    return this;
  }

   /**
   * Get dateInstance
   * @return dateInstance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonDateFormat getDateInstance() {
    return dateInstance;
  }


  public void setDateInstance(JsonDateFormat dateInstance) {
    this.dateInstance = dateInstance;
  }


  public JsonDateFormat dateTimeInstance(JsonDateFormat dateTimeInstance) {
    
    this.dateTimeInstance = dateTimeInstance;
    return this;
  }

   /**
   * Get dateTimeInstance
   * @return dateTimeInstance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonDateFormat getDateTimeInstance() {
    return dateTimeInstance;
  }


  public void setDateTimeInstance(JsonDateFormat dateTimeInstance) {
    this.dateTimeInstance = dateTimeInstance;
  }


  public JsonDateFormat instance(JsonDateFormat instance) {
    
    this.instance = instance;
    return this;
  }

   /**
   * Get instance
   * @return instance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonDateFormat getInstance() {
    return instance;
  }


  public void setInstance(JsonDateFormat instance) {
    this.instance = instance;
  }


  public JsonDateFormat lenient(Boolean lenient) {
    
    this.lenient = lenient;
    return this;
  }

   /**
   * Determines the leniency of the date format.
   * @return lenient
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines the leniency of the date format.")

  public Boolean getLenient() {
    return lenient;
  }


  public void setLenient(Boolean lenient) {
    this.lenient = lenient;
  }


  public JsonDateFormat numberFormat(JsonNumberFormat numberFormat) {
    
    this.numberFormat = numberFormat;
    return this;
  }

   /**
   * Get numberFormat
   * @return numberFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonNumberFormat getNumberFormat() {
    return numberFormat;
  }


  public void setNumberFormat(JsonNumberFormat numberFormat) {
    this.numberFormat = numberFormat;
  }


  public JsonDateFormat timeInstance(JsonDateFormat timeInstance) {
    
    this.timeInstance = timeInstance;
    return this;
  }

   /**
   * Get timeInstance
   * @return timeInstance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonDateFormat getTimeInstance() {
    return timeInstance;
  }


  public void setTimeInstance(JsonDateFormat timeInstance) {
    this.timeInstance = timeInstance;
  }


  public JsonDateFormat timeZone(JsonTimeZone timeZone) {
    
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonTimeZone getTimeZone() {
    return timeZone;
  }


  public void setTimeZone(JsonTimeZone timeZone) {
    this.timeZone = timeZone;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonDateFormat jsonDateFormat = (JsonDateFormat) o;
    return Objects.equals(this.availableLocales, jsonDateFormat.availableLocales) &&
        Objects.equals(this.calendar, jsonDateFormat.calendar) &&
        Objects.equals(this.dateInstance, jsonDateFormat.dateInstance) &&
        Objects.equals(this.dateTimeInstance, jsonDateFormat.dateTimeInstance) &&
        Objects.equals(this.instance, jsonDateFormat.instance) &&
        Objects.equals(this.lenient, jsonDateFormat.lenient) &&
        Objects.equals(this.numberFormat, jsonDateFormat.numberFormat) &&
        Objects.equals(this.timeInstance, jsonDateFormat.timeInstance) &&
        Objects.equals(this.timeZone, jsonDateFormat.timeZone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availableLocales, calendar, dateInstance, dateTimeInstance, instance, lenient, numberFormat, timeInstance, timeZone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonDateFormat {\n");
    sb.append("    availableLocales: ").append(toIndentedString(availableLocales)).append("\n");
    sb.append("    calendar: ").append(toIndentedString(calendar)).append("\n");
    sb.append("    dateInstance: ").append(toIndentedString(dateInstance)).append("\n");
    sb.append("    dateTimeInstance: ").append(toIndentedString(dateTimeInstance)).append("\n");
    sb.append("    instance: ").append(toIndentedString(instance)).append("\n");
    sb.append("    lenient: ").append(toIndentedString(lenient)).append("\n");
    sb.append("    numberFormat: ").append(toIndentedString(numberFormat)).append("\n");
    sb.append("    timeInstance: ").append(toIndentedString(timeInstance)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

