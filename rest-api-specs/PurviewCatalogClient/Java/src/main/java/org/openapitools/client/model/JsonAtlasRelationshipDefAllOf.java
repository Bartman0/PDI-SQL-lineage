/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.JsonAtlasRelationshipEndDef;
import org.openapitools.client.model.JsonPropagateTags;
import org.openapitools.client.model.JsonRelationshipCategory;

/**
 * JsonAtlasRelationshipDefAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonAtlasRelationshipDefAllOf {
  public static final String SERIALIZED_NAME_END_DEF1 = "endDef1";
  @SerializedName(SERIALIZED_NAME_END_DEF1)
  private JsonAtlasRelationshipEndDef endDef1;

  public static final String SERIALIZED_NAME_END_DEF2 = "endDef2";
  @SerializedName(SERIALIZED_NAME_END_DEF2)
  private JsonAtlasRelationshipEndDef endDef2;

  public static final String SERIALIZED_NAME_PROPAGATE_TAGS = "propagateTags";
  @SerializedName(SERIALIZED_NAME_PROPAGATE_TAGS)
  private JsonPropagateTags propagateTags;

  public static final String SERIALIZED_NAME_RELATIONSHIP_CATEGORY = "relationshipCategory";
  @SerializedName(SERIALIZED_NAME_RELATIONSHIP_CATEGORY)
  private JsonRelationshipCategory relationshipCategory;

  public static final String SERIALIZED_NAME_RELATIONSHIP_LABEL = "relationshipLabel";
  @SerializedName(SERIALIZED_NAME_RELATIONSHIP_LABEL)
  private String relationshipLabel;


  public JsonAtlasRelationshipDefAllOf endDef1(JsonAtlasRelationshipEndDef endDef1) {
    
    this.endDef1 = endDef1;
    return this;
  }

   /**
   * Get endDef1
   * @return endDef1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonAtlasRelationshipEndDef getEndDef1() {
    return endDef1;
  }


  public void setEndDef1(JsonAtlasRelationshipEndDef endDef1) {
    this.endDef1 = endDef1;
  }


  public JsonAtlasRelationshipDefAllOf endDef2(JsonAtlasRelationshipEndDef endDef2) {
    
    this.endDef2 = endDef2;
    return this;
  }

   /**
   * Get endDef2
   * @return endDef2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonAtlasRelationshipEndDef getEndDef2() {
    return endDef2;
  }


  public void setEndDef2(JsonAtlasRelationshipEndDef endDef2) {
    this.endDef2 = endDef2;
  }


  public JsonAtlasRelationshipDefAllOf propagateTags(JsonPropagateTags propagateTags) {
    
    this.propagateTags = propagateTags;
    return this;
  }

   /**
   * Get propagateTags
   * @return propagateTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonPropagateTags getPropagateTags() {
    return propagateTags;
  }


  public void setPropagateTags(JsonPropagateTags propagateTags) {
    this.propagateTags = propagateTags;
  }


  public JsonAtlasRelationshipDefAllOf relationshipCategory(JsonRelationshipCategory relationshipCategory) {
    
    this.relationshipCategory = relationshipCategory;
    return this;
  }

   /**
   * Get relationshipCategory
   * @return relationshipCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonRelationshipCategory getRelationshipCategory() {
    return relationshipCategory;
  }


  public void setRelationshipCategory(JsonRelationshipCategory relationshipCategory) {
    this.relationshipCategory = relationshipCategory;
  }


  public JsonAtlasRelationshipDefAllOf relationshipLabel(String relationshipLabel) {
    
    this.relationshipLabel = relationshipLabel;
    return this;
  }

   /**
   * The label of the relationship.
   * @return relationshipLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The label of the relationship.")

  public String getRelationshipLabel() {
    return relationshipLabel;
  }


  public void setRelationshipLabel(String relationshipLabel) {
    this.relationshipLabel = relationshipLabel;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasRelationshipDefAllOf jsonAtlasRelationshipDefAllOf = (JsonAtlasRelationshipDefAllOf) o;
    return Objects.equals(this.endDef1, jsonAtlasRelationshipDefAllOf.endDef1) &&
        Objects.equals(this.endDef2, jsonAtlasRelationshipDefAllOf.endDef2) &&
        Objects.equals(this.propagateTags, jsonAtlasRelationshipDefAllOf.propagateTags) &&
        Objects.equals(this.relationshipCategory, jsonAtlasRelationshipDefAllOf.relationshipCategory) &&
        Objects.equals(this.relationshipLabel, jsonAtlasRelationshipDefAllOf.relationshipLabel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endDef1, endDef2, propagateTags, relationshipCategory, relationshipLabel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasRelationshipDefAllOf {\n");
    sb.append("    endDef1: ").append(toIndentedString(endDef1)).append("\n");
    sb.append("    endDef2: ").append(toIndentedString(endDef2)).append("\n");
    sb.append("    propagateTags: ").append(toIndentedString(propagateTags)).append("\n");
    sb.append("    relationshipCategory: ").append(toIndentedString(relationshipCategory)).append("\n");
    sb.append("    relationshipLabel: ").append(toIndentedString(relationshipLabel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

