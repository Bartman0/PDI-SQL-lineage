/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.JsonAtlasClassification;
import org.openapitools.client.model.JsonAtlasGlossary;
import org.openapitools.client.model.JsonAtlasGlossaryCategory;
import org.openapitools.client.model.JsonAtlasGlossaryExtInfoAllOf;
import org.openapitools.client.model.JsonAtlasGlossaryTerm;
import org.openapitools.client.model.JsonAtlasRelatedCategoryHeader;
import org.openapitools.client.model.JsonAtlasRelatedTermHeader;

/**
 * The extended information of glossary.
 */
@ApiModel(description = "The extended information of glossary.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonAtlasGlossaryExtInfo {
  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_CLASSIFICATIONS = "classifications";
  @SerializedName(SERIALIZED_NAME_CLASSIFICATIONS)
  private List<JsonAtlasClassification> classifications = null;

  public static final String SERIALIZED_NAME_LONG_DESCRIPTION = "longDescription";
  @SerializedName(SERIALIZED_NAME_LONG_DESCRIPTION)
  private String longDescription;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_QUALIFIED_NAME = "qualifiedName";
  @SerializedName(SERIALIZED_NAME_QUALIFIED_NAME)
  private String qualifiedName;

  public static final String SERIALIZED_NAME_SHORT_DESCRIPTION = "shortDescription";
  @SerializedName(SERIALIZED_NAME_SHORT_DESCRIPTION)
  private String shortDescription;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_T_S = "lastModifiedTS";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_T_S)
  private String lastModifiedTS;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<JsonAtlasRelatedCategoryHeader> categories = null;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_TERMS = "terms";
  @SerializedName(SERIALIZED_NAME_TERMS)
  private List<JsonAtlasRelatedTermHeader> terms = null;

  public static final String SERIALIZED_NAME_USAGE = "usage";
  @SerializedName(SERIALIZED_NAME_USAGE)
  private String usage;

  public static final String SERIALIZED_NAME_CATEGORY_INFO = "categoryInfo";
  @SerializedName(SERIALIZED_NAME_CATEGORY_INFO)
  private Map<String, JsonAtlasGlossaryCategory> categoryInfo = null;

  public static final String SERIALIZED_NAME_TERM_INFO = "termInfo";
  @SerializedName(SERIALIZED_NAME_TERM_INFO)
  private Map<String, JsonAtlasGlossaryTerm> termInfo = null;


  public JsonAtlasGlossaryExtInfo guid(String guid) {
    
    this.guid = guid;
    return this;
  }

   /**
   * The GUID of the object.
   * @return guid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of the object.")

  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    this.guid = guid;
  }


  public JsonAtlasGlossaryExtInfo classifications(List<JsonAtlasClassification> classifications) {
    
    this.classifications = classifications;
    return this;
  }

  public JsonAtlasGlossaryExtInfo addClassificationsItem(JsonAtlasClassification classificationsItem) {
    if (this.classifications == null) {
      this.classifications = new ArrayList<JsonAtlasClassification>();
    }
    this.classifications.add(classificationsItem);
    return this;
  }

   /**
   * An array of classifications.
   * @return classifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of classifications.")

  public List<JsonAtlasClassification> getClassifications() {
    return classifications;
  }


  public void setClassifications(List<JsonAtlasClassification> classifications) {
    this.classifications = classifications;
  }


  public JsonAtlasGlossaryExtInfo longDescription(String longDescription) {
    
    this.longDescription = longDescription;
    return this;
  }

   /**
   * The long version description.
   * @return longDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The long version description.")

  public String getLongDescription() {
    return longDescription;
  }


  public void setLongDescription(String longDescription) {
    this.longDescription = longDescription;
  }


  public JsonAtlasGlossaryExtInfo name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the glossary object.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the glossary object.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public JsonAtlasGlossaryExtInfo qualifiedName(String qualifiedName) {
    
    this.qualifiedName = qualifiedName;
    return this;
  }

   /**
   * The qualified name of the glossary object.
   * @return qualifiedName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The qualified name of the glossary object.")

  public String getQualifiedName() {
    return qualifiedName;
  }


  public void setQualifiedName(String qualifiedName) {
    this.qualifiedName = qualifiedName;
  }


  public JsonAtlasGlossaryExtInfo shortDescription(String shortDescription) {
    
    this.shortDescription = shortDescription;
    return this;
  }

   /**
   * The short version of description.
   * @return shortDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The short version of description.")

  public String getShortDescription() {
    return shortDescription;
  }


  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public JsonAtlasGlossaryExtInfo lastModifiedTS(String lastModifiedTS) {
    
    this.lastModifiedTS = lastModifiedTS;
    return this;
  }

   /**
   * ETag for concurrency control.
   * @return lastModifiedTS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ETag for concurrency control.")

  public String getLastModifiedTS() {
    return lastModifiedTS;
  }


  public void setLastModifiedTS(String lastModifiedTS) {
    this.lastModifiedTS = lastModifiedTS;
  }


  public JsonAtlasGlossaryExtInfo categories(List<JsonAtlasRelatedCategoryHeader> categories) {
    
    this.categories = categories;
    return this;
  }

  public JsonAtlasGlossaryExtInfo addCategoriesItem(JsonAtlasRelatedCategoryHeader categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<JsonAtlasRelatedCategoryHeader>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * An array of categories.
   * @return categories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of categories.")

  public List<JsonAtlasRelatedCategoryHeader> getCategories() {
    return categories;
  }


  public void setCategories(List<JsonAtlasRelatedCategoryHeader> categories) {
    this.categories = categories;
  }


  public JsonAtlasGlossaryExtInfo language(String language) {
    
    this.language = language;
    return this;
  }

   /**
   * The language of the glossary.
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The language of the glossary.")

  public String getLanguage() {
    return language;
  }


  public void setLanguage(String language) {
    this.language = language;
  }


  public JsonAtlasGlossaryExtInfo terms(List<JsonAtlasRelatedTermHeader> terms) {
    
    this.terms = terms;
    return this;
  }

  public JsonAtlasGlossaryExtInfo addTermsItem(JsonAtlasRelatedTermHeader termsItem) {
    if (this.terms == null) {
      this.terms = new ArrayList<JsonAtlasRelatedTermHeader>();
    }
    this.terms.add(termsItem);
    return this;
  }

   /**
   * An array of related term headers.
   * @return terms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of related term headers.")

  public List<JsonAtlasRelatedTermHeader> getTerms() {
    return terms;
  }


  public void setTerms(List<JsonAtlasRelatedTermHeader> terms) {
    this.terms = terms;
  }


  public JsonAtlasGlossaryExtInfo usage(String usage) {
    
    this.usage = usage;
    return this;
  }

   /**
   * The usage of the glossary.
   * @return usage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The usage of the glossary.")

  public String getUsage() {
    return usage;
  }


  public void setUsage(String usage) {
    this.usage = usage;
  }


  public JsonAtlasGlossaryExtInfo categoryInfo(Map<String, JsonAtlasGlossaryCategory> categoryInfo) {
    
    this.categoryInfo = categoryInfo;
    return this;
  }

  public JsonAtlasGlossaryExtInfo putCategoryInfoItem(String key, JsonAtlasGlossaryCategory categoryInfoItem) {
    if (this.categoryInfo == null) {
      this.categoryInfo = new HashMap<String, JsonAtlasGlossaryCategory>();
    }
    this.categoryInfo.put(key, categoryInfoItem);
    return this;
  }

   /**
   * The glossary category information.
   * @return categoryInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The glossary category information.")

  public Map<String, JsonAtlasGlossaryCategory> getCategoryInfo() {
    return categoryInfo;
  }


  public void setCategoryInfo(Map<String, JsonAtlasGlossaryCategory> categoryInfo) {
    this.categoryInfo = categoryInfo;
  }


  public JsonAtlasGlossaryExtInfo termInfo(Map<String, JsonAtlasGlossaryTerm> termInfo) {
    
    this.termInfo = termInfo;
    return this;
  }

  public JsonAtlasGlossaryExtInfo putTermInfoItem(String key, JsonAtlasGlossaryTerm termInfoItem) {
    if (this.termInfo == null) {
      this.termInfo = new HashMap<String, JsonAtlasGlossaryTerm>();
    }
    this.termInfo.put(key, termInfoItem);
    return this;
  }

   /**
   * The glossary term information.
   * @return termInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The glossary term information.")

  public Map<String, JsonAtlasGlossaryTerm> getTermInfo() {
    return termInfo;
  }


  public void setTermInfo(Map<String, JsonAtlasGlossaryTerm> termInfo) {
    this.termInfo = termInfo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasGlossaryExtInfo jsonAtlasGlossaryExtInfo = (JsonAtlasGlossaryExtInfo) o;
    return Objects.equals(this.guid, jsonAtlasGlossaryExtInfo.guid) &&
        Objects.equals(this.classifications, jsonAtlasGlossaryExtInfo.classifications) &&
        Objects.equals(this.longDescription, jsonAtlasGlossaryExtInfo.longDescription) &&
        Objects.equals(this.name, jsonAtlasGlossaryExtInfo.name) &&
        Objects.equals(this.qualifiedName, jsonAtlasGlossaryExtInfo.qualifiedName) &&
        Objects.equals(this.shortDescription, jsonAtlasGlossaryExtInfo.shortDescription) &&
        Objects.equals(this.lastModifiedTS, jsonAtlasGlossaryExtInfo.lastModifiedTS) &&
        Objects.equals(this.categories, jsonAtlasGlossaryExtInfo.categories) &&
        Objects.equals(this.language, jsonAtlasGlossaryExtInfo.language) &&
        Objects.equals(this.terms, jsonAtlasGlossaryExtInfo.terms) &&
        Objects.equals(this.usage, jsonAtlasGlossaryExtInfo.usage) &&
        Objects.equals(this.categoryInfo, jsonAtlasGlossaryExtInfo.categoryInfo) &&
        Objects.equals(this.termInfo, jsonAtlasGlossaryExtInfo.termInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(guid, classifications, longDescription, name, qualifiedName, shortDescription, lastModifiedTS, categories, language, terms, usage, categoryInfo, termInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasGlossaryExtInfo {\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    classifications: ").append(toIndentedString(classifications)).append("\n");
    sb.append("    longDescription: ").append(toIndentedString(longDescription)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    qualifiedName: ").append(toIndentedString(qualifiedName)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    lastModifiedTS: ").append(toIndentedString(lastModifiedTS)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("    categoryInfo: ").append(toIndentedString(categoryInfo)).append("\n");
    sb.append("    termInfo: ").append(toIndentedString(termInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

