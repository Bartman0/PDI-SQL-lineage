/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.JsonAtlasTermRelationshipStatus;

/**
 * The basic information for term categorization.
 */
@ApiModel(description = "The basic information for term categorization.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonAtlasTermCategorizationHeader {
  public static final String SERIALIZED_NAME_CATEGORY_GUID = "categoryGuid";
  @SerializedName(SERIALIZED_NAME_CATEGORY_GUID)
  private String categoryGuid;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_TEXT = "displayText";
  @SerializedName(SERIALIZED_NAME_DISPLAY_TEXT)
  private String displayText;

  public static final String SERIALIZED_NAME_RELATION_GUID = "relationGuid";
  @SerializedName(SERIALIZED_NAME_RELATION_GUID)
  private String relationGuid;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private JsonAtlasTermRelationshipStatus status;


  public JsonAtlasTermCategorizationHeader categoryGuid(String categoryGuid) {
    
    this.categoryGuid = categoryGuid;
    return this;
  }

   /**
   * The GUID of the category.
   * @return categoryGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of the category.")

  public String getCategoryGuid() {
    return categoryGuid;
  }


  public void setCategoryGuid(String categoryGuid) {
    this.categoryGuid = categoryGuid;
  }


  public JsonAtlasTermCategorizationHeader description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the record.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the record.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public JsonAtlasTermCategorizationHeader displayText(String displayText) {
    
    this.displayText = displayText;
    return this;
  }

   /**
   * The display text.
   * @return displayText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The display text.")

  public String getDisplayText() {
    return displayText;
  }


  public void setDisplayText(String displayText) {
    this.displayText = displayText;
  }


  public JsonAtlasTermCategorizationHeader relationGuid(String relationGuid) {
    
    this.relationGuid = relationGuid;
    return this;
  }

   /**
   * The GUID of the relationship.
   * @return relationGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of the relationship.")

  public String getRelationGuid() {
    return relationGuid;
  }


  public void setRelationGuid(String relationGuid) {
    this.relationGuid = relationGuid;
  }


  public JsonAtlasTermCategorizationHeader status(JsonAtlasTermRelationshipStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonAtlasTermRelationshipStatus getStatus() {
    return status;
  }


  public void setStatus(JsonAtlasTermRelationshipStatus status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasTermCategorizationHeader jsonAtlasTermCategorizationHeader = (JsonAtlasTermCategorizationHeader) o;
    return Objects.equals(this.categoryGuid, jsonAtlasTermCategorizationHeader.categoryGuid) &&
        Objects.equals(this.description, jsonAtlasTermCategorizationHeader.description) &&
        Objects.equals(this.displayText, jsonAtlasTermCategorizationHeader.displayText) &&
        Objects.equals(this.relationGuid, jsonAtlasTermCategorizationHeader.relationGuid) &&
        Objects.equals(this.status, jsonAtlasTermCategorizationHeader.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryGuid, description, displayText, relationGuid, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasTermCategorizationHeader {\n");
    sb.append("    categoryGuid: ").append(toIndentedString(categoryGuid)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayText: ").append(toIndentedString(displayText)).append("\n");
    sb.append("    relationGuid: ").append(toIndentedString(relationGuid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

