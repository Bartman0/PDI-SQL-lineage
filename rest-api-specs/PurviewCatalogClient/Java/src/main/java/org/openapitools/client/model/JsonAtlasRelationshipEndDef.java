/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.JsonCardinality;

/**
 * The relationshipEndDef represents an end of the relationship. The end of the relationship is defined by a type, an attribute name, cardinality and whether it  is the container end of the relationship.
 */
@ApiModel(description = "The relationshipEndDef represents an end of the relationship. The end of the relationship is defined by a type, an attribute name, cardinality and whether it  is the container end of the relationship.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonAtlasRelationshipEndDef {
  public static final String SERIALIZED_NAME_CARDINALITY = "cardinality";
  @SerializedName(SERIALIZED_NAME_CARDINALITY)
  private JsonCardinality cardinality;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_IS_CONTAINER = "isContainer";
  @SerializedName(SERIALIZED_NAME_IS_CONTAINER)
  private Boolean isContainer;

  public static final String SERIALIZED_NAME_IS_LEGACY_ATTRIBUTE = "isLegacyAttribute";
  @SerializedName(SERIALIZED_NAME_IS_LEGACY_ATTRIBUTE)
  private Boolean isLegacyAttribute;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;


  public JsonAtlasRelationshipEndDef cardinality(JsonCardinality cardinality) {
    
    this.cardinality = cardinality;
    return this;
  }

   /**
   * Get cardinality
   * @return cardinality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonCardinality getCardinality() {
    return cardinality;
  }


  public void setCardinality(JsonCardinality cardinality) {
    this.cardinality = cardinality;
  }


  public JsonAtlasRelationshipEndDef description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the relationship end definition.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the relationship end definition.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public JsonAtlasRelationshipEndDef isContainer(Boolean isContainer) {
    
    this.isContainer = isContainer;
    return this;
  }

   /**
   * Determines if it is container.
   * @return isContainer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines if it is container.")

  public Boolean getIsContainer() {
    return isContainer;
  }


  public void setIsContainer(Boolean isContainer) {
    this.isContainer = isContainer;
  }


  public JsonAtlasRelationshipEndDef isLegacyAttribute(Boolean isLegacyAttribute) {
    
    this.isLegacyAttribute = isLegacyAttribute;
    return this;
  }

   /**
   * Determines if it is a legacy attribute.
   * @return isLegacyAttribute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines if it is a legacy attribute.")

  public Boolean getIsLegacyAttribute() {
    return isLegacyAttribute;
  }


  public void setIsLegacyAttribute(Boolean isLegacyAttribute) {
    this.isLegacyAttribute = isLegacyAttribute;
  }


  public JsonAtlasRelationshipEndDef name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the relationship end definition.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the relationship end definition.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public JsonAtlasRelationshipEndDef type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of the relationship end.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the relationship end.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasRelationshipEndDef jsonAtlasRelationshipEndDef = (JsonAtlasRelationshipEndDef) o;
    return Objects.equals(this.cardinality, jsonAtlasRelationshipEndDef.cardinality) &&
        Objects.equals(this.description, jsonAtlasRelationshipEndDef.description) &&
        Objects.equals(this.isContainer, jsonAtlasRelationshipEndDef.isContainer) &&
        Objects.equals(this.isLegacyAttribute, jsonAtlasRelationshipEndDef.isLegacyAttribute) &&
        Objects.equals(this.name, jsonAtlasRelationshipEndDef.name) &&
        Objects.equals(this.type, jsonAtlasRelationshipEndDef.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardinality, description, isContainer, isLegacyAttribute, name, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasRelationshipEndDef {\n");
    sb.append("    cardinality: ").append(toIndentedString(cardinality)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isContainer: ").append(toIndentedString(isContainer)).append("\n");
    sb.append("    isLegacyAttribute: ").append(toIndentedString(isLegacyAttribute)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

