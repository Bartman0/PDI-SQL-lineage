/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The lineage relation with GUID of the from and to entity.
 */
@ApiModel(description = "The lineage relation with GUID of the from and to entity.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonLineageRelation {
  public static final String SERIALIZED_NAME_FROM_ENTITY_ID = "fromEntityId";
  @SerializedName(SERIALIZED_NAME_FROM_ENTITY_ID)
  private String fromEntityId;

  public static final String SERIALIZED_NAME_RELATIONSHIP_ID = "relationshipId";
  @SerializedName(SERIALIZED_NAME_RELATIONSHIP_ID)
  private String relationshipId;

  public static final String SERIALIZED_NAME_TO_ENTITY_ID = "toEntityId";
  @SerializedName(SERIALIZED_NAME_TO_ENTITY_ID)
  private String toEntityId;


  public JsonLineageRelation fromEntityId(String fromEntityId) {
    
    this.fromEntityId = fromEntityId;
    return this;
  }

   /**
   * The GUID of from-entity.
   * @return fromEntityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of from-entity.")

  public String getFromEntityId() {
    return fromEntityId;
  }


  public void setFromEntityId(String fromEntityId) {
    this.fromEntityId = fromEntityId;
  }


  public JsonLineageRelation relationshipId(String relationshipId) {
    
    this.relationshipId = relationshipId;
    return this;
  }

   /**
   * The GUID of relationship.
   * @return relationshipId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of relationship.")

  public String getRelationshipId() {
    return relationshipId;
  }


  public void setRelationshipId(String relationshipId) {
    this.relationshipId = relationshipId;
  }


  public JsonLineageRelation toEntityId(String toEntityId) {
    
    this.toEntityId = toEntityId;
    return this;
  }

   /**
   * The GUID of to-entity.
   * @return toEntityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The GUID of to-entity.")

  public String getToEntityId() {
    return toEntityId;
  }


  public void setToEntityId(String toEntityId) {
    this.toEntityId = toEntityId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonLineageRelation jsonLineageRelation = (JsonLineageRelation) o;
    return Objects.equals(this.fromEntityId, jsonLineageRelation.fromEntityId) &&
        Objects.equals(this.relationshipId, jsonLineageRelation.relationshipId) &&
        Objects.equals(this.toEntityId, jsonLineageRelation.toEntityId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromEntityId, relationshipId, toEntityId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonLineageRelation {\n");
    sb.append("    fromEntityId: ").append(toIndentedString(fromEntityId)).append("\n");
    sb.append("    relationshipId: ").append(toIndentedString(relationshipId)).append("\n");
    sb.append("    toEntityId: ").append(toIndentedString(toEntityId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

