/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.JsonFilterCriteria;

/**
 * The parameters used for search.
 */
@ApiModel(description = "The parameters used for search.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonSearchParameters {
  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<String> attributes = null;

  public static final String SERIALIZED_NAME_CLASSIFICATION = "classification";
  @SerializedName(SERIALIZED_NAME_CLASSIFICATION)
  private String classification;

  public static final String SERIALIZED_NAME_ENTITY_FILTERS = "entityFilters";
  @SerializedName(SERIALIZED_NAME_ENTITY_FILTERS)
  private JsonFilterCriteria entityFilters;

  public static final String SERIALIZED_NAME_EXCLUDE_DELETED_ENTITIES = "excludeDeletedEntities";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_DELETED_ENTITIES)
  private Boolean excludeDeletedEntities;

  public static final String SERIALIZED_NAME_INCLUDE_CLASSIFICATION_ATTRIBUTES = "includeClassificationAttributes";
  @SerializedName(SERIALIZED_NAME_INCLUDE_CLASSIFICATION_ATTRIBUTES)
  private Boolean includeClassificationAttributes;

  public static final String SERIALIZED_NAME_INCLUDE_SUB_CLASSIFICATIONS = "includeSubClassifications";
  @SerializedName(SERIALIZED_NAME_INCLUDE_SUB_CLASSIFICATIONS)
  private Boolean includeSubClassifications;

  public static final String SERIALIZED_NAME_INCLUDE_SUB_TYPES = "includeSubTypes";
  @SerializedName(SERIALIZED_NAME_INCLUDE_SUB_TYPES)
  private Boolean includeSubTypes;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private Integer limit;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private String query;

  public static final String SERIALIZED_NAME_TAG_FILTERS = "tagFilters";
  @SerializedName(SERIALIZED_NAME_TAG_FILTERS)
  private JsonFilterCriteria tagFilters;

  public static final String SERIALIZED_NAME_TERM_NAME = "termName";
  @SerializedName(SERIALIZED_NAME_TERM_NAME)
  private String termName;

  public static final String SERIALIZED_NAME_TYPE_NAME = "typeName";
  @SerializedName(SERIALIZED_NAME_TYPE_NAME)
  private String typeName;


  public JsonSearchParameters attributes(List<String> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public JsonSearchParameters addAttributesItem(String attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<String>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Attribute values included in the results
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Attribute values included in the results")

  public List<String> getAttributes() {
    return attributes;
  }


  public void setAttributes(List<String> attributes) {
    this.attributes = attributes;
  }


  public JsonSearchParameters classification(String classification) {
    
    this.classification = classification;
    return this;
  }

   /**
   * The classification to search.
   * @return classification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The classification to search.")

  public String getClassification() {
    return classification;
  }


  public void setClassification(String classification) {
    this.classification = classification;
  }


  public JsonSearchParameters entityFilters(JsonFilterCriteria entityFilters) {
    
    this.entityFilters = entityFilters;
    return this;
  }

   /**
   * Get entityFilters
   * @return entityFilters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonFilterCriteria getEntityFilters() {
    return entityFilters;
  }


  public void setEntityFilters(JsonFilterCriteria entityFilters) {
    this.entityFilters = entityFilters;
  }


  public JsonSearchParameters excludeDeletedEntities(Boolean excludeDeletedEntities) {
    
    this.excludeDeletedEntities = excludeDeletedEntities;
    return this;
  }

   /**
   * Determines if exclude deleted entities.
   * @return excludeDeletedEntities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines if exclude deleted entities.")

  public Boolean getExcludeDeletedEntities() {
    return excludeDeletedEntities;
  }


  public void setExcludeDeletedEntities(Boolean excludeDeletedEntities) {
    this.excludeDeletedEntities = excludeDeletedEntities;
  }


  public JsonSearchParameters includeClassificationAttributes(Boolean includeClassificationAttributes) {
    
    this.includeClassificationAttributes = includeClassificationAttributes;
    return this;
  }

   /**
   * Determines if include classification attributes.
   * @return includeClassificationAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines if include classification attributes.")

  public Boolean getIncludeClassificationAttributes() {
    return includeClassificationAttributes;
  }


  public void setIncludeClassificationAttributes(Boolean includeClassificationAttributes) {
    this.includeClassificationAttributes = includeClassificationAttributes;
  }


  public JsonSearchParameters includeSubClassifications(Boolean includeSubClassifications) {
    
    this.includeSubClassifications = includeSubClassifications;
    return this;
  }

   /**
   * Determines if include sub classifications.
   * @return includeSubClassifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines if include sub classifications.")

  public Boolean getIncludeSubClassifications() {
    return includeSubClassifications;
  }


  public void setIncludeSubClassifications(Boolean includeSubClassifications) {
    this.includeSubClassifications = includeSubClassifications;
  }


  public JsonSearchParameters includeSubTypes(Boolean includeSubTypes) {
    
    this.includeSubTypes = includeSubTypes;
    return this;
  }

   /**
   * Determines if include sub types.
   * @return includeSubTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines if include sub types.")

  public Boolean getIncludeSubTypes() {
    return includeSubTypes;
  }


  public void setIncludeSubTypes(Boolean includeSubTypes) {
    this.includeSubTypes = includeSubTypes;
  }


  public JsonSearchParameters limit(Integer limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * The limit of the search result.
   * @return limit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The limit of the search result.")

  public Integer getLimit() {
    return limit;
  }


  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public JsonSearchParameters offset(Integer offset) {
    
    this.offset = offset;
    return this;
  }

   /**
   * The offset of the search.
   * @return offset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The offset of the search.")

  public Integer getOffset() {
    return offset;
  }


  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public JsonSearchParameters query(String query) {
    
    this.query = query;
    return this;
  }

   /**
   * The search query.
   * @return query
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The search query.")

  public String getQuery() {
    return query;
  }


  public void setQuery(String query) {
    this.query = query;
  }


  public JsonSearchParameters tagFilters(JsonFilterCriteria tagFilters) {
    
    this.tagFilters = tagFilters;
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonFilterCriteria getTagFilters() {
    return tagFilters;
  }


  public void setTagFilters(JsonFilterCriteria tagFilters) {
    this.tagFilters = tagFilters;
  }


  public JsonSearchParameters termName(String termName) {
    
    this.termName = termName;
    return this;
  }

   /**
   * The name of the term for search.
   * @return termName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the term for search.")

  public String getTermName() {
    return termName;
  }


  public void setTermName(String termName) {
    this.termName = termName;
  }


  public JsonSearchParameters typeName(String typeName) {
    
    this.typeName = typeName;
    return this;
  }

   /**
   * The name of the type for search.
   * @return typeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the type for search.")

  public String getTypeName() {
    return typeName;
  }


  public void setTypeName(String typeName) {
    this.typeName = typeName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonSearchParameters jsonSearchParameters = (JsonSearchParameters) o;
    return Objects.equals(this.attributes, jsonSearchParameters.attributes) &&
        Objects.equals(this.classification, jsonSearchParameters.classification) &&
        Objects.equals(this.entityFilters, jsonSearchParameters.entityFilters) &&
        Objects.equals(this.excludeDeletedEntities, jsonSearchParameters.excludeDeletedEntities) &&
        Objects.equals(this.includeClassificationAttributes, jsonSearchParameters.includeClassificationAttributes) &&
        Objects.equals(this.includeSubClassifications, jsonSearchParameters.includeSubClassifications) &&
        Objects.equals(this.includeSubTypes, jsonSearchParameters.includeSubTypes) &&
        Objects.equals(this.limit, jsonSearchParameters.limit) &&
        Objects.equals(this.offset, jsonSearchParameters.offset) &&
        Objects.equals(this.query, jsonSearchParameters.query) &&
        Objects.equals(this.tagFilters, jsonSearchParameters.tagFilters) &&
        Objects.equals(this.termName, jsonSearchParameters.termName) &&
        Objects.equals(this.typeName, jsonSearchParameters.typeName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, classification, entityFilters, excludeDeletedEntities, includeClassificationAttributes, includeSubClassifications, includeSubTypes, limit, offset, query, tagFilters, termName, typeName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonSearchParameters {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    classification: ").append(toIndentedString(classification)).append("\n");
    sb.append("    entityFilters: ").append(toIndentedString(entityFilters)).append("\n");
    sb.append("    excludeDeletedEntities: ").append(toIndentedString(excludeDeletedEntities)).append("\n");
    sb.append("    includeClassificationAttributes: ").append(toIndentedString(includeClassificationAttributes)).append("\n");
    sb.append("    includeSubClassifications: ").append(toIndentedString(includeSubClassifications)).append("\n");
    sb.append("    includeSubTypes: ").append(toIndentedString(includeSubTypes)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("    termName: ").append(toIndentedString(termName)).append("\n");
    sb.append("    typeName: ").append(toIndentedString(typeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

