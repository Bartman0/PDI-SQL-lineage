/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The timezone information.
 */
@ApiModel(description = "The timezone information.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:36:33.263002+01:00[Europe/Amsterdam]")
public class JsonTimeZone {
  public static final String SERIALIZED_NAME_DS_T_SAVINGS = "DSTSavings";
  @SerializedName(SERIALIZED_NAME_DS_T_SAVINGS)
  private Integer dsTSavings;

  public static final String SERIALIZED_NAME_I_D = "ID";
  @SerializedName(SERIALIZED_NAME_I_D)
  private String ID;

  public static final String SERIALIZED_NAME_AVAILABLE_I_DS = "availableIDs";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_I_DS)
  private List<String> availableIDs = null;

  public static final String SERIALIZED_NAME_DEFAULT = "default";
  @SerializedName(SERIALIZED_NAME_DEFAULT)
  private JsonTimeZone _default;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_RAW_OFFSET = "rawOffset";
  @SerializedName(SERIALIZED_NAME_RAW_OFFSET)
  private Integer rawOffset;


  public JsonTimeZone dsTSavings(Integer dsTSavings) {
    
    this.dsTSavings = dsTSavings;
    return this;
  }

   /**
   * The value of the daylight saving time.
   * @return dsTSavings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value of the daylight saving time.")

  public Integer getDsTSavings() {
    return dsTSavings;
  }


  public void setDsTSavings(Integer dsTSavings) {
    this.dsTSavings = dsTSavings;
  }


  public JsonTimeZone ID(String ID) {
    
    this.ID = ID;
    return this;
  }

   /**
   * The ID of the timezone.
   * @return ID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the timezone.")

  public String getID() {
    return ID;
  }


  public void setID(String ID) {
    this.ID = ID;
  }


  public JsonTimeZone availableIDs(List<String> availableIDs) {
    
    this.availableIDs = availableIDs;
    return this;
  }

  public JsonTimeZone addAvailableIDsItem(String availableIDsItem) {
    if (this.availableIDs == null) {
      this.availableIDs = new ArrayList<String>();
    }
    this.availableIDs.add(availableIDsItem);
    return this;
  }

   /**
   * An array of available IDs.
   * @return availableIDs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of available IDs.")

  public List<String> getAvailableIDs() {
    return availableIDs;
  }


  public void setAvailableIDs(List<String> availableIDs) {
    this.availableIDs = availableIDs;
  }


  public JsonTimeZone _default(JsonTimeZone _default) {
    
    this._default = _default;
    return this;
  }

   /**
   * Get _default
   * @return _default
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JsonTimeZone getDefault() {
    return _default;
  }


  public void setDefault(JsonTimeZone _default) {
    this._default = _default;
  }


  public JsonTimeZone displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name of the timezone.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The display name of the timezone.")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public JsonTimeZone rawOffset(Integer rawOffset) {
    
    this.rawOffset = rawOffset;
    return this;
  }

   /**
   * The raw offset of the timezone.
   * @return rawOffset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The raw offset of the timezone.")

  public Integer getRawOffset() {
    return rawOffset;
  }


  public void setRawOffset(Integer rawOffset) {
    this.rawOffset = rawOffset;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonTimeZone jsonTimeZone = (JsonTimeZone) o;
    return Objects.equals(this.dsTSavings, jsonTimeZone.dsTSavings) &&
        Objects.equals(this.ID, jsonTimeZone.ID) &&
        Objects.equals(this.availableIDs, jsonTimeZone.availableIDs) &&
        Objects.equals(this._default, jsonTimeZone._default) &&
        Objects.equals(this.displayName, jsonTimeZone.displayName) &&
        Objects.equals(this.rawOffset, jsonTimeZone.rawOffset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dsTSavings, ID, availableIDs, _default, displayName, rawOffset);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonTimeZone {\n");
    sb.append("    dsTSavings: ").append(toIndentedString(dsTSavings)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    availableIDs: ").append(toIndentedString(availableIDs)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    rawOffset: ").append(toIndentedString(rawOffset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

