/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.JsonAtlasEntityHeader;
import org.openapitools.client.model.JsonLineageDirection;
import org.openapitools.client.model.JsonLineageRelation;
import org.openapitools.client.model.JsonParentRelation;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for JsonAtlasLineageInfo
 */
public class JsonAtlasLineageInfoTest {
    private final JsonAtlasLineageInfo model = new JsonAtlasLineageInfo();

    /**
     * Model tests for JsonAtlasLineageInfo
     */
    @Test
    public void testJsonAtlasLineageInfo() {
        // TODO: test JsonAtlasLineageInfo
    }

    /**
     * Test the property 'baseEntityGuid'
     */
    @Test
    public void baseEntityGuidTest() {
        // TODO: test baseEntityGuid
    }

    /**
     * Test the property 'guidEntityMap'
     */
    @Test
    public void guidEntityMapTest() {
        // TODO: test guidEntityMap
    }

    /**
     * Test the property 'widthCounts'
     */
    @Test
    public void widthCountsTest() {
        // TODO: test widthCounts
    }

    /**
     * Test the property 'lineageDepth'
     */
    @Test
    public void lineageDepthTest() {
        // TODO: test lineageDepth
    }

    /**
     * Test the property 'lineageWidth'
     */
    @Test
    public void lineageWidthTest() {
        // TODO: test lineageWidth
    }

    /**
     * Test the property 'includeParent'
     */
    @Test
    public void includeParentTest() {
        // TODO: test includeParent
    }

    /**
     * Test the property 'childrenCount'
     */
    @Test
    public void childrenCountTest() {
        // TODO: test childrenCount
    }

    /**
     * Test the property 'lineageDirection'
     */
    @Test
    public void lineageDirectionTest() {
        // TODO: test lineageDirection
    }

    /**
     * Test the property 'parentRelations'
     */
    @Test
    public void parentRelationsTest() {
        // TODO: test parentRelations
    }

    /**
     * Test the property 'relations'
     */
    @Test
    public void relationsTest() {
        // TODO: test relations
    }

}
