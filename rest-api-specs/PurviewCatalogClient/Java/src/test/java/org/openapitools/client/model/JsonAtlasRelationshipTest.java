/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.JsonAtlasClassification;
import org.openapitools.client.model.JsonAtlasObjectId;
import org.openapitools.client.model.JsonAtlasRelationshipAllOf;
import org.openapitools.client.model.JsonAtlasStruct;
import org.openapitools.client.model.JsonPropagateTags;
import org.openapitools.client.model.JsonStatusAtlasRelationship;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for JsonAtlasRelationship
 */
public class JsonAtlasRelationshipTest {
    private final JsonAtlasRelationship model = new JsonAtlasRelationship();

    /**
     * Model tests for JsonAtlasRelationship
     */
    @Test
    public void testJsonAtlasRelationship() {
        // TODO: test JsonAtlasRelationship
    }

    /**
     * Test the property 'attributes'
     */
    @Test
    public void attributesTest() {
        // TODO: test attributes
    }

    /**
     * Test the property 'typeName'
     */
    @Test
    public void typeNameTest() {
        // TODO: test typeName
    }

    /**
     * Test the property 'lastModifiedTS'
     */
    @Test
    public void lastModifiedTSTest() {
        // TODO: test lastModifiedTS
    }

    /**
     * Test the property 'blockedPropagatedClassifications'
     */
    @Test
    public void blockedPropagatedClassificationsTest() {
        // TODO: test blockedPropagatedClassifications
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'end1'
     */
    @Test
    public void end1Test() {
        // TODO: test end1
    }

    /**
     * Test the property 'end2'
     */
    @Test
    public void end2Test() {
        // TODO: test end2
    }

    /**
     * Test the property 'guid'
     */
    @Test
    public void guidTest() {
        // TODO: test guid
    }

    /**
     * Test the property 'homeId'
     */
    @Test
    public void homeIdTest() {
        // TODO: test homeId
    }

    /**
     * Test the property 'label'
     */
    @Test
    public void labelTest() {
        // TODO: test label
    }

    /**
     * Test the property 'propagateTags'
     */
    @Test
    public void propagateTagsTest() {
        // TODO: test propagateTags
    }

    /**
     * Test the property 'propagatedClassifications'
     */
    @Test
    public void propagatedClassificationsTest() {
        // TODO: test propagatedClassifications
    }

    /**
     * Test the property 'provenanceType'
     */
    @Test
    public void provenanceTypeTest() {
        // TODO: test provenanceType
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

    /**
     * Test the property 'updatedBy'
     */
    @Test
    public void updatedByTest() {
        // TODO: test updatedBy
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
