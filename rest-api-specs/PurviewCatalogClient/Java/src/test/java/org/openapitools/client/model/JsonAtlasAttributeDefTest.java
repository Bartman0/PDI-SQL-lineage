/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.JsonAtlasConstraintDef;
import org.openapitools.client.model.JsonCardinality;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for JsonAtlasAttributeDef
 */
public class JsonAtlasAttributeDefTest {
    private final JsonAtlasAttributeDef model = new JsonAtlasAttributeDef();

    /**
     * Model tests for JsonAtlasAttributeDef
     */
    @Test
    public void testJsonAtlasAttributeDef() {
        // TODO: test JsonAtlasAttributeDef
    }

    /**
     * Test the property 'cardinality'
     */
    @Test
    public void cardinalityTest() {
        // TODO: test cardinality
    }

    /**
     * Test the property 'constraints'
     */
    @Test
    public void constraintsTest() {
        // TODO: test constraints
    }

    /**
     * Test the property 'defaultValue'
     */
    @Test
    public void defaultValueTest() {
        // TODO: test defaultValue
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'includeInNotification'
     */
    @Test
    public void includeInNotificationTest() {
        // TODO: test includeInNotification
    }

    /**
     * Test the property 'isIndexable'
     */
    @Test
    public void isIndexableTest() {
        // TODO: test isIndexable
    }

    /**
     * Test the property 'isOptional'
     */
    @Test
    public void isOptionalTest() {
        // TODO: test isOptional
    }

    /**
     * Test the property 'isUnique'
     */
    @Test
    public void isUniqueTest() {
        // TODO: test isUnique
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'options'
     */
    @Test
    public void optionsTest() {
        // TODO: test options
    }

    /**
     * Test the property 'typeName'
     */
    @Test
    public void typeNameTest() {
        // TODO: test typeName
    }

    /**
     * Test the property 'valuesMaxCount'
     */
    @Test
    public void valuesMaxCountTest() {
        // TODO: test valuesMaxCount
    }

    /**
     * Test the property 'valuesMinCount'
     */
    @Test
    public void valuesMinCountTest() {
        // TODO: test valuesMinCount
    }

}
