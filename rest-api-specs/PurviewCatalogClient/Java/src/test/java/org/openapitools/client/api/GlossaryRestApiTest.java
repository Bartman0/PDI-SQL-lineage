/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.io.File;
import org.openapitools.client.model.JsonAtlasGlossary;
import org.openapitools.client.model.JsonAtlasGlossaryCategory;
import org.openapitools.client.model.JsonAtlasGlossaryExtInfo;
import org.openapitools.client.model.JsonAtlasGlossaryTerm;
import org.openapitools.client.model.JsonAtlasRelatedCategoryHeader;
import org.openapitools.client.model.JsonAtlasRelatedObjectId;
import org.openapitools.client.model.JsonAtlasRelatedTermHeader;
import org.openapitools.client.model.JsonImportCSVOperation;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GlossaryRestApi
 */
@Ignore
public class GlossaryRestApiTest {

    private final GlossaryRestApi api = new GlossaryRestApi();

    
    /**
     * 
     *
     * Assigns the given term to the provided list of related objects.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTAssignTermToEntitiesTest() throws ApiException {
        String termGuid = null;
        List<JsonAtlasRelatedObjectId> relatedObjectIds = null;
        api.glossaryRESTAssignTermToEntities(termGuid, relatedObjectIds);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Creates a glossary.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTCreateGlossaryTest() throws ApiException {
        JsonAtlasGlossary atlasGlossary = null;
        JsonAtlasGlossary response = api.glossaryRESTCreateGlossary(atlasGlossary);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Creates glossary category in bulk.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTCreateGlossaryCategoriesTest() throws ApiException {
        List<JsonAtlasGlossaryCategory> glossaryCategory = null;
        List<JsonAtlasGlossaryCategory> response = api.glossaryRESTCreateGlossaryCategories(glossaryCategory);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Creates a glossary category.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTCreateGlossaryCategoryTest() throws ApiException {
        JsonAtlasGlossaryCategory glossaryCategory = null;
        JsonAtlasGlossaryCategory response = api.glossaryRESTCreateGlossaryCategory(glossaryCategory);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Creates a glossary term.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTCreateGlossaryTermTest() throws ApiException {
        JsonAtlasGlossaryTerm glossaryTerm = null;
        JsonAtlasGlossaryTerm response = api.glossaryRESTCreateGlossaryTerm(glossaryTerm);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Creates glossary terms in bulk.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTCreateGlossaryTermsTest() throws ApiException {
        List<JsonAtlasGlossaryTerm> glossaryTerm = null;
        List<JsonAtlasGlossaryTerm> response = api.glossaryRESTCreateGlossaryTerms(glossaryTerm);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Deletes a glossary.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTDeleteGlossaryTest() throws ApiException {
        String glossaryGuid = null;
        api.glossaryRESTDeleteGlossary(glossaryGuid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Deletes a glossary category.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTDeleteGlossaryCategoryTest() throws ApiException {
        String categoryGuid = null;
        api.glossaryRESTDeleteGlossaryCategory(categoryGuid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Deletes a glossary term.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTDeleteGlossaryTermTest() throws ApiException {
        String termGuid = null;
        api.glossaryRESTDeleteGlossaryTerm(termGuid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Deletes the term assignment for the given list of related objects.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTDeleteTermAssignmentFromEntitiesTest() throws ApiException {
        String termGuid = null;
        List<JsonAtlasRelatedObjectId> relatedObjectIds = null;
        api.glossaryRESTDeleteTermAssignmentFromEntities(termGuid, relatedObjectIds);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Export Glossary Terms as csv file
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTExportGlossaryTermsAsCSVTest() throws ApiException {
        String glossaryGuid = null;
        List<String> termGuids = null;
        api.glossaryRESTExportGlossaryTermsAsCSV(glossaryGuid, termGuids);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets all terms associated with the specific category.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetCategoryTermsTest() throws ApiException {
        String categoryGuid = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        List<JsonAtlasRelatedTermHeader> response = api.glossaryRESTGetCategoryTerms(categoryGuid, limit, offset, sort);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets a specific glossary with detailed information.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetDetailedGlossaryTest() throws ApiException {
        String glossaryGuid = null;
        JsonAtlasGlossaryExtInfo response = api.glossaryRESTGetDetailedGlossary(glossaryGuid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets all related objects assigned with the specified term.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetEntitiesAssignedWithTermTest() throws ApiException {
        String termGuid = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        List<JsonAtlasRelatedObjectId> response = api.glossaryRESTGetEntitiesAssignedWithTerm(termGuid, limit, offset, sort);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets all glossaries registered with Atlas.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetGlossariesTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        List<JsonAtlasGlossary> response = api.glossaryRESTGetGlossaries(limit, offset, sort);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets a specific Glossary by its GUID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetGlossaryTest() throws ApiException {
        String glossaryGuid = null;
        JsonAtlasGlossary response = api.glossaryRESTGetGlossary(glossaryGuid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets the categories belonging to a specific glossary.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetGlossaryCategoriesTest() throws ApiException {
        String glossaryGuid = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        List<JsonAtlasGlossaryCategory> response = api.glossaryRESTGetGlossaryCategories(glossaryGuid, limit, offset, sort);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets the category headers belonging to a specific glossary.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetGlossaryCategoriesHeadersTest() throws ApiException {
        String glossaryGuid = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        List<JsonAtlasRelatedCategoryHeader> response = api.glossaryRESTGetGlossaryCategoriesHeaders(glossaryGuid, limit, offset, sort);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets specific glossary category by its GUID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetGlossaryCategoryTest() throws ApiException {
        String categoryGuid = null;
        JsonAtlasGlossaryCategory response = api.glossaryRESTGetGlossaryCategory(categoryGuid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets a specific glossary term by its GUID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetGlossaryTermTest() throws ApiException {
        String termGuid = null;
        JsonAtlasGlossaryTerm response = api.glossaryRESTGetGlossaryTerm(termGuid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets term headers belonging to a specific glossary.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetGlossaryTermHeadersTest() throws ApiException {
        String glossaryGuid = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        List<JsonAtlasRelatedTermHeader> response = api.glossaryRESTGetGlossaryTermHeaders(glossaryGuid, limit, offset, sort);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets terms belonging to a specific glossary.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetGlossaryTermsTest() throws ApiException {
        String glossaryGuid = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        List<JsonAtlasGlossaryTerm> response = api.glossaryRESTGetGlossaryTerms(glossaryGuid, limit, offset, sort);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get the status of import csv operation
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetImportCSVOperationStatusTest() throws ApiException {
        String operationGuid = null;
        JsonImportCSVOperation response = api.glossaryRESTGetImportCSVOperationStatus(operationGuid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets all related categories (parent and children). Limit, offset, and sort parameters are currently not being enabled and won&#39;t work even they are passed.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetRelatedCategoriesTest() throws ApiException {
        String categoryGuid = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        Map<String, List<JsonAtlasRelatedCategoryHeader>> response = api.glossaryRESTGetRelatedCategories(categoryGuid, limit, offset, sort);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets all related terms for a specific term by its GUID. Limit, offset, and sort parameters are currently not being enabled and won&#39;t work even they are passed.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetRelatedTermsTest() throws ApiException {
        String termGuid = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        Map<String, List<JsonAtlasRelatedTermHeader>> response = api.glossaryRESTGetRelatedTerms(termGuid, limit, offset, sort);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets terms by glossary name.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTGetTermsByGlossaryNameTest() throws ApiException {
        String glossaryName = null;
        Integer limit = null;
        Integer offset = null;
        List<JsonAtlasGlossaryTerm> response = api.glossaryRESTGetTermsByGlossaryName(glossaryName, limit, offset);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Import Glossary Terms from local csv file
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTImportGlossaryTermsViaCSVTest() throws ApiException {
        String glossaryGuid = null;
        File file = null;
        JsonImportCSVOperation response = api.glossaryRESTImportGlossaryTermsViaCSV(glossaryGuid, file);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Import Glossary Terms from local csv file by glossaryName
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTImportGlossaryTermsViaCSVByGlossaryNameTest() throws ApiException {
        String glossaryName = null;
        File file = null;
        JsonImportCSVOperation response = api.glossaryRESTImportGlossaryTermsViaCSVByGlossaryName(glossaryName, file);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Updates the glossary partially. Some properties such as qualifiedName are not allowed to be updated.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTPartialUpdateGlossaryTest() throws ApiException {
        String glossaryGuid = null;
        Map<String, String> partialUpdates = null;
        JsonAtlasGlossary response = api.glossaryRESTPartialUpdateGlossary(glossaryGuid, partialUpdates);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Updates the glossary category partially.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTPartialUpdateGlossaryCategoryTest() throws ApiException {
        String categoryGuid = null;
        Map<String, String> partialUpdates = null;
        JsonAtlasGlossaryCategory response = api.glossaryRESTPartialUpdateGlossaryCategory(categoryGuid, partialUpdates);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Updates the glossary term partially.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTPartialUpdateGlossaryTermTest() throws ApiException {
        String termGuid = null;
        Map<String, String> partialUpdates = null;
        JsonAtlasGlossaryTerm response = api.glossaryRESTPartialUpdateGlossaryTerm(termGuid, partialUpdates);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Deletes the term assignment for the given list of related objects.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTRemoveTermAssignmentFromEntitiesTest() throws ApiException {
        String termGuid = null;
        List<JsonAtlasRelatedObjectId> relatedObjectIds = null;
        api.glossaryRESTRemoveTermAssignmentFromEntities(termGuid, relatedObjectIds);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Updates the given glossary.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTUpdateGlossaryTest() throws ApiException {
        String glossaryGuid = null;
        JsonAtlasGlossary updatedGlossary = null;
        JsonAtlasGlossary response = api.glossaryRESTUpdateGlossary(glossaryGuid, updatedGlossary);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Updates the given glossary category by its GUID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTUpdateGlossaryCategoryTest() throws ApiException {
        String categoryGuid = null;
        JsonAtlasGlossaryCategory glossaryCategory = null;
        JsonAtlasGlossaryCategory response = api.glossaryRESTUpdateGlossaryCategory(categoryGuid, glossaryCategory);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Updates the given glossary term by its GUID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void glossaryRESTUpdateGlossaryTermTest() throws ApiException {
        String termGuid = null;
        JsonAtlasGlossaryTerm glossaryTerm = null;
        JsonAtlasGlossaryTerm response = api.glossaryRESTUpdateGlossaryTerm(termGuid, glossaryTerm);

        // TODO: test validations
    }
    
}
