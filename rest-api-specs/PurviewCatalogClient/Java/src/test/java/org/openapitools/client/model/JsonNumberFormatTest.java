/*
 * Purview Catalog Service REST API Document
 * Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.
 *
 * The version of the OpenAPI document: 2020-12-01-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.JsonRoundingMode;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for JsonNumberFormat
 */
public class JsonNumberFormatTest {
    private final JsonNumberFormat model = new JsonNumberFormat();

    /**
     * Model tests for JsonNumberFormat
     */
    @Test
    public void testJsonNumberFormat() {
        // TODO: test JsonNumberFormat
    }

    /**
     * Test the property 'availableLocales'
     */
    @Test
    public void availableLocalesTest() {
        // TODO: test availableLocales
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'currencyInstance'
     */
    @Test
    public void currencyInstanceTest() {
        // TODO: test currencyInstance
    }

    /**
     * Test the property 'groupingUsed'
     */
    @Test
    public void groupingUsedTest() {
        // TODO: test groupingUsed
    }

    /**
     * Test the property 'instance'
     */
    @Test
    public void instanceTest() {
        // TODO: test instance
    }

    /**
     * Test the property 'integerInstance'
     */
    @Test
    public void integerInstanceTest() {
        // TODO: test integerInstance
    }

    /**
     * Test the property 'maximumFractionDigits'
     */
    @Test
    public void maximumFractionDigitsTest() {
        // TODO: test maximumFractionDigits
    }

    /**
     * Test the property 'maximumIntegerDigits'
     */
    @Test
    public void maximumIntegerDigitsTest() {
        // TODO: test maximumIntegerDigits
    }

    /**
     * Test the property 'minimumFractionDigits'
     */
    @Test
    public void minimumFractionDigitsTest() {
        // TODO: test minimumFractionDigits
    }

    /**
     * Test the property 'minimumIntegerDigits'
     */
    @Test
    public void minimumIntegerDigitsTest() {
        // TODO: test minimumIntegerDigits
    }

    /**
     * Test the property 'numberInstance'
     */
    @Test
    public void numberInstanceTest() {
        // TODO: test numberInstance
    }

    /**
     * Test the property 'parseIntegerOnly'
     */
    @Test
    public void parseIntegerOnlyTest() {
        // TODO: test parseIntegerOnly
    }

    /**
     * Test the property 'percentInstance'
     */
    @Test
    public void percentInstanceTest() {
        // TODO: test percentInstance
    }

    /**
     * Test the property 'roundingMode'
     */
    @Test
    public void roundingModeTest() {
        // TODO: test roundingMode
    }

}
