# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6365, generator: {generator})
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Optional, TYPE_CHECKING

from azure.core import AsyncPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials_async import AsyncTokenCredential

from ._configuration import PurviewCatalogServiceRESTAPIDocumentConfiguration
from .operations import EntityRESTOperations
from .operations import GlossaryRESTOperations
from .operations import DiscoveryRESTOperations
from .operations import LineageRESTOperations
from .operations import RelationshipRESTOperations
from .operations import TypesRESTOperations
from .. import models


class PurviewCatalogServiceRESTAPIDocument(object):
    """Purview Catalog Service is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments. This swagger defines REST API of the Hot Tier of Data Catalog Gen 2.

    :ivar entity_rest: EntityRESTOperations operations
    :vartype entity_rest: PurviewCatalog.aio.operations.EntityRESTOperations
    :ivar glossary_rest: GlossaryRESTOperations operations
    :vartype glossary_rest: PurviewCatalog.aio.operations.GlossaryRESTOperations
    :ivar discovery_rest: DiscoveryRESTOperations operations
    :vartype discovery_rest: PurviewCatalog.aio.operations.DiscoveryRESTOperations
    :ivar lineage_rest: LineageRESTOperations operations
    :vartype lineage_rest: PurviewCatalog.aio.operations.LineageRESTOperations
    :ivar relationship_rest: RelationshipRESTOperations operations
    :vartype relationship_rest: PurviewCatalog.aio.operations.RelationshipRESTOperations
    :ivar types_rest: TypesRESTOperations operations
    :vartype types_rest: PurviewCatalog.aio.operations.TypesRESTOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials_async.AsyncTokenCredential
    :param sort: The sort order, ASC (default) or DESC.
    :type sort: str
    :param extended_info: Limits whether includes extended information.
    :type extended_info: bool
    :param str base_url: Service URL
    """

    def __init__(
        self,
        credential: "AsyncTokenCredential",
        sort: Optional[str] = "ASC",
        extended_info: Optional[bool] = None,
        base_url: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        if not base_url:
            base_url = 'https://catalog.purview.azure.com/api'
        self._config = PurviewCatalogServiceRESTAPIDocumentConfiguration(credential, sort, extended_info, **kwargs)
        self._client = AsyncPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.entity_rest = EntityRESTOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.glossary_rest = GlossaryRESTOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.discovery_rest = DiscoveryRESTOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.lineage_rest = LineageRESTOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.relationship_rest = RelationshipRESTOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.types_rest = TypesRESTOperations(
            self._client, self._config, self._serialize, self._deserialize)

    async def close(self) -> None:
        await self._client.close()

    async def __aenter__(self) -> "PurviewCatalogServiceRESTAPIDocument":
        await self._client.__aenter__()
        return self

    async def __aexit__(self, *exc_details) -> None:
        await self._client.__aexit__(*exc_details)
